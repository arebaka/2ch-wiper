IyMgLSotIGNvZGluZzogdXRmLTggLSotCgp0cnk6CgkjIGltcG9ydCBiYXNlNjQKCWltcG9ydCB0aW1lCglpbXBvcnQgc3lzCglpbXBvcnQgdGhyZWFkaW5nCglpbXBvcnQgaW8KCWltcG9ydCByYW5kb20KCWltcG9ydCBzdHJpbmcKCWltcG9ydCBvcwoJaW1wb3J0IGpzb24KCWltcG9ydCBzaWduYWwKCSNpbXBvcnQgc29ja3MKCSMgaW1wb3J0IGFzeW5jaW8KCWltcG9ydCByZXF1ZXN0cwoJaW1wb3J0IFBJTC5JbWFnZQoJIyBmcm9tIHB5dGhvbjNfYW50aWNhcHRjaGEgaW1wb3J0IE5vQ2FwdGNoYVRhc2tQcm94eWxlc3MKCWZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwCglpbXBvcnQgdXJsbGliMwoJdXJsbGliMy5kaXNhYmxlX3dhcm5pbmdzKHVybGxpYjMuZXhjZXB0aW9ucy5JbnNlY3VyZVJlcXVlc3RXYXJuaW5nKQpleGNlcHQgRXhjZXB0aW9uOgoJcHJpbnQoItCd0LXRgiDQvdC10L7QsdGF0L7QtNC40LzRi9GFINC80L7QtNGD0LvQtdC5LCDQsdGA0LDRgtC40YjQutCwLCDQuNC00Lgg0YHRgtCw0LLRjC4iKQoJZXhpdCgpCgoKCgoKIyA9PT09PT0g0J7RgtC60LvRjtGH0LXQvdC40LUgPT09PT09CmRlZiBzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHksIHNpZz0wLCBmcmFtZT0wKToKCXByaW50KCJcblxu0JbQtNGDLCDQv9C+0LrQsCDQvtCx0L3QvtCy0LjRgtGB0Y8g0LvQuNGB0YIg0YEg0L/RgNC+0LrRgdC40YfQutCw0LzQuC4uLiIpCgoJZiA9IG9wZW4oInByb3hpZXMiLCAicisiKQoJZCA9IGYucmVhZGxpbmVzKCkKCWYuc2VlaygwKQoKCWZvciBpIGluIGQ6CgkJaWYgaS5yc3RyaXAoKSBub3QgaW4gYmFkcHJveGllczoKCQkJZi53cml0ZShpKQoKCWYudHJ1bmNhdGUoKQoJZi5jbG9zZSgpCgoJZCA9IG9wZW4oImZvcmJpZGRlbi5jc3YiLCAiYSIpCglmb3IgcHJveHkgaW4gZm9yYmlkZGVucHJveHk6CgkJZC53cml0ZShwcm94eSArICdcbicpCglkLmNsb3NlKCkKCglwcmludChzdHIoKGxlbihiYWRwcm94aWVzKSAtIGxlbihmb3JiaWRkZW5wcm94eSkpKSwgItC30LDQsdCw0L3QtdC90YvRhSDQv9GA0L7QutGB0LjRh9C10Log0L/QvtGH0LjRidC10L3QviEiKQoJcHJpbnQoc3RyKGxlbihmb3JiaWRkZW5wcm94eSkpLCAi0LfQsNC/0YDQtdGJ0LXQvdC90YvRhSDQv9GA0L7QutGB0LjRh9C10Log0L/QvtGH0LjRidC10L3QviEiKQoJcHJpbnQoItCS0YvQutC70Y7Rh9Cw0Y7RgdGMLi4uIikKCglvcy5fZXhpdCgwKQoKIyA9PT09PT0g0J7QsdGA0LDQsdC+0YLQutCwINC60LvQsNCy0LjRiCA9PT09PT0KZGVmIGV0ZXJuYWxfaW5wdXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpOgoJd2hpbGUgVHJ1ZToKCQlwcmludCgiQ2hvb3NlIHlvdXIgb3B0aW9uIikKCQljaG9pY2UgPSBpbnB1dCgiW1NddGF0aXN0aWNzLCBbUV11aXQsIFtDXWxlYXIgcGFyYXNoYVxuIikKCQljaG9pY2UgPSBjaG9pY2UucnN0cmlwKCkKCQl0cnk6CgkJCWlmIGNob2ljZS5sb3dlcigpID09ICJzIiBvciBjaG9pY2UubG93ZXIoKSA9PSAi0YsiOgoJCQkJU3RhdHMucHJpbnRTdGF0cyhiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQkJZWxpZiBjaG9pY2UubG93ZXIoKSA9PSAicSIgb3IgY2hvaWNlLmxvd2VyKCkgPT0gItC5IjoKCQkJCXNhZmVfcXVpdChiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQkJCWJhZHByb3hpZXMuY2xlYXIoKQoJCQkJZm9yYmlkZGVucHJveHkuY2xlYXIoKQoJCQllbGlmIGNob2ljZS5sb3dlcigpID09ICJjIiBvciBjaG9pY2UubG93ZXIoKSA9PSAi0YEiOgoJCQkJYmFkcHJveGllcy5jbGVhcigpCgkJCQlwcmludCgi0J/QsNGA0LDRiNCwINC/0L7Rh9C40YnQtdC90LAiKQoJCQllbHNlOgoJCQkJcHJpbnQoItCi0Ysg0L/QuNGI0LXRiNGMINGF0YPQudC90Y4iKQoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCQkJcHJpbnQoZSkKCgojID09PT09PSDQodGC0LDRgtCwID09PT09PQpjbGFzcyBTdGF0czoKCgludW1PZlByb3hpZXMgPSAwCgludW1PZlRocmVhZHMgPSAwCglwb3N0c1NlbnQgPSAwCgljYXB0Y2hhc1NvbHZlZCA9IDAKCglkZWYgc2V0UHJveGllcyhhbW91bnQpOgoJCVN0YXRzLm51bU9mUHJveGllcyA9IGFtb3VudAoKCWRlZiBzZXRudW1PZlRocmVhZHMoYW1vdW50KToKCQlTdGF0cy5udW1PZlRocmVhZHMgPSBhbW91bnQKCglkZWYgaW5jQ2FwdGNoYXMoKToKCQlTdGF0cy5jYXB0Y2hhc1NvbHZlZCArPSAxCgoJZGVmIGluY1Bvc3RzKCk6CgkJU3RhdHMucG9zdHNTZW50ICs9IDEKCglkZWYgcHJpbnRTdGF0cyhiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSk6CgkJcHJpbnQoIj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0iKQoJCXByaW50KCLQn9GA0L7QutGB0LjRh9C10Log0L7RgdGC0LDQu9C+0YHRjDpcdCIsIHN0cihTdGF0cy5udW1PZlByb3hpZXMgLSBsZW4oYmFkcHJveGllcykpKQoJCXByaW50KCLQndCw0YfQsNC70YzQvdGL0LUg0L/QvtGC0L7QutC4Olx0Iiwgc3RyKFN0YXRzLm51bU9mVGhyZWFkcykpCgkJcHJpbnQoItCa0LDQv9GC0Ycg0YDQtdGI0LXQvdC+Olx0XHQiLCBzdHIoU3RhdHMuY2FwdGNoYXNTb2x2ZWQpKQoJCXByaW50KCLQl9Cw0LHQsNC90LXQvdGL0LUg0L/RgNC+0LrRgdC40YfQutC4Olx0Iiwgc3RyKChs
ZW4oYmFkcHJveGllcykgLSBsZW4oZm9yYmlkZGVucHJveHkpKSkpCgkJcHJpbnQoItCU0L7RgdGC0YPQvyDQt9Cw0L/RgNC10YnQtdC9Olx0Iiwgc3RyKGxlbihmb3JiaWRkZW5wcm94eSkpKQoJCXByaW50KCLQotC10LrRg9GJ0LjQtSDQv9C+0YLQvtC60Lg6XHRcdCIsIHN0cih0aHJlYWRpbmcuYWN0aXZlX2NvdW50KCkpKQoJCSNwcmludCgi0KHQvtC30LTQsNC90L4g0YLRgNC10LTQvtCyL9C/0L7RgdGC0L7QsjogIiwgcG9zdGksICJcbiIpCgkJaWYgdGhyZWFkaW5nLmFjdGl2ZV9jb3VudCgpIDw9IDI6CgkJCXByaW50KCJBTEwgVEhSRUFEUyBGSU5JU0hFRCwgUFJFU1MgXCJRXCIiKQoJCXByaW50KCI9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4iKQoKCgoKCiMgPT09PT09INCc0L7QtNC10LvRjCDQtNC+0YHQutC4ID09PT09PQpjbGFzcyBDYXRhbG9nOgoKCWRlZiBfX2luaXRfXyhzZWxmLCBib2FyZCk6CgkJc2VsZi5ib2FyZCA9IGJvYXJkICAjINC00L7RgdC60LAKCQlwcmludCgi0KHQutCw0YfQuNCy0LDRjiDQtNC+0YHQutGDIiwgc2VsZi5ib2FyZCkKCQlzZWxmLnNjaGVtYSA9IGpzb24ubG9hZHMocmVxdWVzdHMuZ2V0KCcnLmpvaW4oWyJodHRwczovLzJjaC5oay8iLCBib2FyZCwgIi9jYXRhbG9nLmpzb24iXSkpLnRleHQpICAjIERPTSDQtNC+0YHQutC4CgkJc2VsZi50aHJlYWRzQ291bnQgPSBsZW4oc2VsZi5zY2hlbWFbInRocmVhZHMiXSkgICMg0YfQuNGB0LvQviDQsNC60YLQuNCy0L3Ri9GFINGC0YDQtdC00L7QsiDQvdCwINC00L7RgdC60LUKCgojID09PT09PSDQn9GA0LjQutGA0LXQv9C70LXQvdC40LUg0Log0L/QvtGB0YLRgyA9PT09PT0KY2xhc3MgTWVkaWE6CgoJZGVmIF9faW5pdF9fKHNlbGYsIG5hbWUsIHBhdGgpOgoJCXNlbGYubmFtZSA9IG5hbWUgICMg0LjQvNGPINC/0YDQuNC60YDQtdC/0LvQtdC90LjRjwoJCXNlbGYucGF0aCA9IHBhdGggICMg0L/Rg9GC0Ywg0L3QsCDRgdC10YDQstC10YDQtSDQuiDQv9GA0LjQutGA0LXQv9C70LXQvdC40Y4KCQlzZWxmLmNhY2hlZCA9IEZhbHNlICAjINGE0LvQsNCzINC30LDQs9GA0YPQt9C60Lgg0L/RgNC40LrRgNC10L/Qu9C10L3QuNGPINC90LAg0LrQvtC80L8g0YEg0LLQsNC50L/QsNC70LrQvtC5CgoJIyA9PT0g0LfQsNCz0YDRg9C30LrQsCDQv9GA0LjQutGA0LXQv9C70LXQvdC40Y8g0YEg0YHQvtGB0LDRh9CwID09PQoJZGVmIGRvd25sb2FkKHNlbGYpOgoJCWlmIHNlbGYuY2FjaGVkID09IEZhbHNlOgoJCQlzZWxmLmZpbGUgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vMmNoLmhrIitzZWxmLnBhdGgpLmNvbnRlbnQgICMg0YHQsNC8INGE0LDQudC7INC/0YDQuNC60YDQtdC/0LvQtdC90LjRjwoJCQlzZWxmLmNhY2hlZCA9IFRydWUKCgojID09PT09PSDQodGD0YnQtdGB0YLQstGD0Y7RidC40Lkg0L/QvtGB0YIgPT09PT09CmNsYXNzIFBvc3Q6CgoJZGVmIF9faW5pdF9fKHNlbGYsIHNjaGVtYSwgbW9kZSwgdHJpZ2dlckZvcm0pOgoJCXNlbGYuSUQgPSBzdHIoc2NoZW1hWyJudW0iXSkgICMg0L3QvtC80LXRgCDQv9C+0YHRgtCwINC90LAg0LTQvtGB0LrQtQoJCXNlbGYuY29tbWVudCA9IHNlbGYuc2V0X2NvbW1lbnQoc2NoZW1hWyJjb21tZW50Il0sIG1vZGUsIHRyaWdnZXJGb3JtKSAgIyDRgtC10LrRgdGCINC/0L7RgdGC0LAKCQlzZWxmLnNhZ2UgPSBzZWxmLnNldF9zYWdlKHNjaGVtYSkgICMg0YTQu9Cw0LMg0YHQsNC20LgKCQlzZWxmLm51bSA9IHNjaGVtYVsibnVtYmVyIl0gICMg0L3QvtC80LXRgCDQv9C+0YHRgtCwINCyINGC0YDQtdC00LUgKNGBIDEpCgkJc2VsZi5tZWRpYXMgPSBbXSAgIyDQv9GA0LjQutGA0LXQv9C70LXQvdC40Y8KCQlmb3IgbWVkaWEgaW4gc2NoZW1hWyJmaWxlcyJdOgoJCQlzZWxmLm1lZGlhcy5hcHBlbmQoTWVkaWEobWVkaWFbIm5hbWUiXSwgbWVkaWFbInBhdGgiXSkpCgkJcHJpbnQoItCi0YDQuNCz0LPQtdGA0L3Rg9C70LDRgdGMINC90LAiLCAiPj4iK3NlbGYuSUQpCgoJIyA9PT0g0YTQvtGA0LzQsNGC0LjRgNC+0LLQsNC90LjQtSDRgtC10LrRgdGC0LAg0L/QvtGB0YLQsCA9PT0KCWRlZiBzZXRfY29tbWVudChzZWxmLCB0ZXh0LCBtb2RlLCB0cmlnZ2VyRm9ybSk6CgkJIyA9PT0g0LfQsNC80LXQvdCwIDxicj4g0L3QsCBcbiA9PT0KCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCI8YnI+IiwgIlxuIikKCQkjID09PSDRgNCw0LfQvNC10YLQutCwINC20LjRgNC90L7Qs9C+ID09PQoJCXRleHQgPSB0ZXh0LnJlcGxhY2UoIjxzdHJvbmc+IiwgIltiXSIpCgkJdGV4dCA9IHRleHQucmVwbGFjZSgiPC9zdHJvbmc+IiwgIlsvYl0iKQoJCSMgPT09INGA0LDQt9C80LXRgtC60LAg0LrRg9GA0YHQuNCy0LAgPT09CgkJdGV4dCA9IHRleHQucmVwbGFjZSgiPGVtPiIsICJbaV0iKQoJCXRleHQgPSB0ZXh0LnJlcGxhY2UoIjwvZW0+IiwgIlsvaV0iKQoJCSMgPT09INGA0LDQt9C80LXRgtC60LAg0L3QsNC00YHRgtGA0L7Rh9C90L7Qs9C+ID09PQoJCXRleHQgPSB0ZXh0LnJlcGxhY2UoIjxzdXA+IiwgIltzdXBdIikKCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCI8L3N1cD4iLCAiWy9zdXBdIikKCQkjID09PSDRgNCw0LfQvNC10YLQutCwINC/0L7QtNGB0YLRgNC+0YfQvdC+0LPQviA9PT0KCQl0
ZXh0ID0gdGV4dC5yZXBsYWNlKCI8c3ViPiIsICJbc3ViXSIpCgkJdGV4dCA9IHRleHQucmVwbGFjZSgiPC9zdWI+IiwgIlsvc3ViXSIpCgkJIyA9PT0g0YDQsNC30LzQtdGC0LrQsCDQvNC+0L3QvtGI0LjRgNC40L3QvdC+0LPQviA9PT0KCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCI8Y29kZT4iLCAiW2NvZGVdIikKCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCI8L2NvZGU+IiwgIlsvY29kZV0iKQoKCQkjID09PSDRg9C00LDQu9C10L3QuNC1INGB0YHRi9C70L7QuiDQvdCwINC/0L7RgdGC0YssINC70LjQsdC+INC80LXRgtC60LggKE9QKSA9PT0KCQlpZiBtb2RlID09IDcgYW5kIHRyaWdnZXJGb3JtID09IDA6CgkJCXRleHQgPSB0ZXh0LnJlcGxhY2UoIiAoT1ApIiwgIiIpCgkJCXNvdXAgPSBCZWF1dGlmdWxTb3VwKHRleHQsIGZlYXR1cmVzPSJodG1sLnBhcnNlciIpCgkJZWxzZToKCQkJc291cCA9IEJlYXV0aWZ1bFNvdXAodGV4dCwgZmVhdHVyZXM9Imh0bWwucGFyc2VyIikKCQkJZm9yIGEgaW4gc291cC5maW5kX2FsbCgiYSIsIHsiY2xhc3MiOiAicG9zdC1yZXBseS1saW5rIn0pOgoJCQkJYS5kZWNvbXBvc2UoKQoKCQkjID09PSDRgNCw0LfQvNC10YLQutCwINC/0L7QtNGH0ZHRgNC60LjQstCw0L3QuNC5ID09PQoJCWZvciB1IGluIHNvdXAuZmluZF9hbGwoInNwYW4iLCB7ImNsYXNzIjogInUifSk6CgkJCXUucmVwbGFjZV93aXRoKCJbdV0iK3UuZ2V0X3RleHQoKSsiWy91XSIpCgkJIyA9PT0g0YDQsNC30LzQtdGC0LrQsCDQvdCw0LTRh9GR0YDQutC40LLQsNC90LjQuSA9PT0KCQlmb3IgbyBpbiBzb3VwLmZpbmRfYWxsKCJzcGFuIiwgeyJjbGFzcyI6ICJvIn0pOgoJCQlvLnJlcGxhY2Vfd2l0aCgiW29dIitvLmdldF90ZXh0KCkrIlsvb10iKQoJCSMgPT09INGA0LDQt9C80LXRgtC60LAg0YHQv9C+0LnQu9C10YDQvtCyID09PQoJCWZvciBzcG9pbGVyIGluIHNvdXAuZmluZF9hbGwoInNwYW4iLCB7ImNsYXNzIjogInNwb2lsZXIifSk6CgkJCXNwb2lsZXIucmVwbGFjZV93aXRoKCJbc3BvaWxlcl0iK3Nwb2lsZXIuZ2V0X3RleHQoKSsiWy9zcG9pbGVyXSIpCgkJIyA9PT0g0YDQsNC30LzQtdGC0LrQsCDQt9Cw0YfRkdGA0LrQvdGD0YLQvtCz0L4gPT09CgkJZm9yIHMgaW4gc291cC5maW5kX2FsbCgic3BhbiIsIHsiY2xhc3MiOiAicyJ9KToKCQkJcy5yZXBsYWNlX3dpdGgoIltzXSIrcy5nZXRfdGV4dCgpKyJbL3NdIikKCgkJIyA9PT0g0YHQvtGF0YDQsNC90LXQvdC40LUgPT09CgkJcmV0dXJuIHN0cihzb3VwLmdldF90ZXh0KCkpLmxzdHJpcCgnXG4nKS5yc3RyaXAoJ1xuJykKCgkjID09PSDQvtC/0YDQtdC00LXQu9C10L3QuNC1INGE0LvQsNCz0LAg0YHQsNC20LggPT09CglkZWYgc2V0X3NhZ2Uoc2VsZiwgc2NoZW1hKToKCQlyZXR1cm4gVHJ1ZSBpZiBzY2hlbWFbImVtYWlsIl0uZmluZCgibWFpbHRvOnNhZ2UiKSA9PSAtMSBlbHNlIEZhbHNlCgoKIyA9PT09PT0g0JzQvtC00LXQu9GMINGC0YDQtdC00LAgPT09PT09CmNsYXNzIFRocmVhZDoKCglkZWYgX19pbml0X18oc2VsZiwgYm9hcmQsIElELCBtb2RlLCB0cmlnZ2VyRm9ybSk6CgkJc2VsZi5ib2FyZCA9IGJvYXJkICAjINC00L7RgdC60LAKCQlzZWxmLklEID0gSUQgICMg0L3QvtC80LXRgCDRgtGA0LXQtNCwINC90LAg0LTQvtGB0LrQtQoJCXByaW50KCLQodC60LDRh9C40LLQsNGOINGC0YDQtdC0Iiwgc2VsZi5JRCkKCQlzZWxmLnNjaGVtYSA9IGpzb24ubG9hZHMocmVxdWVzdHMuZ2V0KCcnLmpvaW4oWyJodHRwczovLzJjaC5oay8iLCBib2FyZCwgIi9yZXMvIiwgSUQsICIuanNvbiJdKSkudGV4dCkgICMgRE9NINGC0YDQtdC00LAKCQlzZWxmLnBvc3RzQ291bnQgPSBzZWxmLnNjaGVtYVsicG9zdHNfY291bnQiXSArIDEgICMg0YfQuNGB0LvQviDQv9C+0YHRgtC+0LIg0LIg0YLRgNC10LTQtQoJCXNlbGYubGFzdElEID0gc3RyKHNlbGYuc2NoZW1hWyJtYXhfbnVtIl0pICAjINC90L7QvNC10YAg0L/QvtGB0LvQtdC00L3QtdCz0L4g0L/QvtGB0YLQsCDRgtGA0LXQtNCwCgkJc2VsZi5wb3N0cyA9IHNlbGYuZG93bmxvYWRfcG9zdHMobW9kZSwgdHJpZ2dlckZvcm0pICAjINC/0L7RgdGC0YsKCQlzZWxmLmxvYWYgPSAiIiAgIyAi0LHQsNGC0L7QvSIKCQlmb3IgcG9zdE51bSBpbiByYW5nZShtaW4obGVuKHNlbGYucG9zdHMpLCAzMCkpOgoJCQlzZWxmLmxvYWYgKz0gKCI+PiIrc2VsZi5wb3N0c1twb3N0TnVtXS5JRCsiICIpCgoJIyA9PT0g0LfQsNCz0YDRg9C30LrQsCBET00g0L/QvtGB0YLQvtCyID09PQoJZGVmIGRvd25sb2FkX3Bvc3RzKHNlbGYsIG1vZGUsIHRyaWdnZXJGb3JtKToKCQlwb3N0cyA9IFtdCgkJZm9yIHBvc3QgaW4gc2VsZi5zY2hlbWFbInRocmVhZHMiXVswXVsicG9zdHMiXToKCQkJcG9zdHMuYXBwZW5kKFBvc3QocG9zdCwgbW9kZSwgdHJpZ2dlckZvcm0pKQoJCXJldHVybiBwb3N0cwoKCgoKCgojID09PT09PSDQl9Cw0L/QuNGB0Ywg0LvQvtCz0L7QsiA9PT09PT0KZGVmIGFjdGl2YXRlX2RlYnVnKGxvZ01vZGUpOgoJaW1wb3J0IGxvZ2dpbmcKCXByaW50KCJcbioqKiBERUJVRyBNT0RFIEFDVElWQVRFRCAqKioiKQoJaWYgbG9nTW9kZSA9PSAxOgoJCWxvZ2dpbmcuYmFzaWNDb25maWcoZmlsZW5hbWU9J0xPRy50eHQnLCBsZXZl
bD1sb2dnaW5nLkRFQlVHKQoJZWxpZiBsb2dNb2RlID09IDI6CgkJbG9nZ2luZy5iYXNpY0NvbmZpZyhsZXZlbD1sb2dnaW5nLkRFQlVHKQoKCiMgPT09PT09INCa0L7QvdGE0LjQs9GD0YDQsNGG0LjRjyA9PT09PT0KY2xhc3MgU2V0dXA6CgoJZGVmIF9faW5pdF9fKHNlbGYsIGFyZ3MpOgoJCWlmIGludChhcmdzWzVdKSAhPSAwOgoJCQlhY3RpdmF0ZV9kZWJ1ZyhpbnQoYXJnc1s1XSkpCgkJc2VsZi5jcEZpbGUsIHNlbGYuYmFuc0ZpbGUsIHNlbGYuZnVsbEZpbGUgPSBzZWxmLnNldF9lbmNvZGluZygpICAjINGE0LDQudC70Ysg0YEg0L/QsNGB0YLQsNC80LgKCgkJc2VsZi5ib2FyZCA9IGFyZ3NbMV0gICMg0LTQvtGB0LrQsAoJCXNlbGYudGhyZWFkID0gYXJnc1syXSAgIyDRgtGA0LXQtAoJCXNlbGYuY2hhb3MgPSBhcmdzWzNdICAjINGF0LDQvtGBIC8g0YLRgNC10LQg0LTQu9GPINC/0L7RgdGC0LjQvdCz0LAKCQlzZWxmLnBvdG9ja3NDb3VudCA9IGludChhcmdzWzRdKSAgIyDRh9C40YHQu9C+INC/0L7RgtC+0LrQvtCyCgkJc2VsZi5USU1FT1VULCBzZWxmLlBBVVNFID0gc2VsZi5zZXRfY29uc3RzKHNlbGYucG90b2Nrc0NvdW50KSAgIyDRgtCw0LnQvNCw0YPRgiwg0L/QsNGD0LfQsAoKCQlzZWxmLnNvbHZlciwgc2VsZi5rZXksIHNlbGYua2V5cmVxID0gc2VsZi5zZXRfa2V5KGludChhcmdzWzZdKSwgYXJnc1s3XSkgICMg0YHQvtC70LLQtdGALCDQutC70Y7Rhywg0YHRgtCw0YLRg9GBINC60LvRjtGH0LAKCQlzZWxmLnByb3h5UmVwZWF0c0NvdW50ID0gaW50KGFyZ3NbOF0pICAjINGH0LjRgdC70L4g0L/QvtCy0YLQvtGA0L7QsiDQv9GA0L7QutGB0LgKCQlzZWxmLm1vZGUsIHNlbGYucGFzdGVzLCBzZWxmLmJpZ1Bhc3RlID0gc2VsZi5zZXRfbW9kZShpbnQoYXJnc1s5XSkpICAjINGA0LXQttC40Lwg0LLQsNC50L/QsNC70LrQuCwg0L/QsNGB0YLRiwoKCQlpZiBzZWxmLm1vZGUgPT0gODoKCQkJc2VsZi5taW5CYW4gPSBpbnQoYXJnc1sxMF0pICAjINC80LjQvdC40LzQsNC70YzQvdGL0LkgSUQg0LHQsNC90LAKCQkJc2VsZi5tYXhCYW4gPSBpbnQoYXJnc1sxMV0pICAjINC80LDQutGB0LjQvNCw0LvRjNC90YvQuSBJRCDQsdCw0L3QsAoKCQlzZWxmLmNhdGFsb2cgPSAwICAjIMKvXF8o44OEKV8vwq8KCQlzZWxmLnRocmVhZHMgPSBbXQoKCQlpZiBzZWxmLnRocmVhZCAhPSAiMCI6CgkJCXNlbGYudHJpZ2dlckZvcm0sIHNlbGYuc2hyYXBuZWxDaGFyZ2UsIHNlbGYudGFyZ2V0VGhyZWFkID0gc2VsZi5zZXRfdHJpZ2dlcihpbnQoYXJnc1sxMl0pLCBpbnQoYXJnc1sxM10pLCBpbnQoYXJnc1sxNF0pLCBhcmdzKSAgIyDRgNC10LbQuNC8INGC0YDQuNCz0LPQtdGA0LAsINGH0LjRgdC70L4g0YLRgNC10LTQvtCyINGI0YDQsNC/0L3QtdC70LgKCQllbHNlOgoJCQlzZWxmLnRyaWdnZXJGb3JtID0gMAoJCQlzZWxmLnNocmFwbmVsQ2hhcmdlID0gMAoKCQlzZWxmLm1lZGlhS2luZCwgc2VsZi5tZWRpYVBhdGhzLCBzZWxmLm1lZGlhc0NvdW50ID0gc2VsZi5zZXRfbWVkaWEoaW50KGFyZ3NbMTVdKSwgYXJnc1sxNl0sIGludChhcmdzWzE3XSkpICAjINGC0LjQvyDQv9GA0LjQutGA0LXQv9C70LXQvdC40LksINGH0LjRgdC70L4g0L/RgNC40LrRgNC10L/Qu9C10L3QuNC5INC6INGC0YDQtdC00YMKCQkKCQlzZWxmLnNhZ2VNb2RlID0gaW50KGFyZ3NbMThdKSAgIyDRgNC10LbQuNC8INGB0LDQttC4CgkJCgkJc2VsZi5zaGFrYWxQb3dlciA9IGludChhcmdzWzE5XSkgICMg0YPRgNC+0LLQtdC90Ywg0YjQsNC60LDQu9CwCgkJaWYgYXJnc1syMF0gPT0gIjEiOiBzZWxmLnNoYWthbENvbG9yID0gVHJ1ZSAgIyDRhNC70LDQsyDRhtCy0LXRgtC90L7Qs9C+INGI0LDQutCw0LvQsAoJCWVsc2U6IHNlbGYuc2hha2FsQ29sb3IgPSBGYWxzZQoJCWlmIGFyZ3NbMjFdID09ICIxIjogc2VsZi5zaGFrYWxBZmZpbmUgPSBUcnVlICAjINGE0LvQsNCzINCw0YTRhNC40L3QvdC+0LPQviDRiNCw0LrQsNC70LAKCQllbHNlOiBzZWxmLnNoYWthbEFmZmluZSA9IEZhbHNlCgkJaWYgYXJnc1syMl0gPT0gIjEiOiBzZWxmLnRvUE5HID0gVHJ1ZSAgIyDRhNC70LDQsyDQutC+0L3QstC10YDRgtCw0YbQuNC4INCyIFBORwoJCWVsc2U6IHNlbGYudG9QTkcgPSBGYWxzZQoKCSMgPT09INC+0L/RgNC10LTQtdC70LXQvdC40LUg0J7QoSDQuCDQutC+0LTQuNGA0L7QstC60LggPT09CglkZWYgc2V0X2VuY29kaW5nKHNlbGYpOgoJCXNlbGYuY3BGaWxlID0gInRleHRzLnR4dCIKCQlzZWxmLmJhbnNGaWxlID0gImJhbnMudHh0IgoJCXNlbGYuZnVsbEZpbGUgPSAicGFyYXNoYS50eHQiCgkJcmV0dXJuIHNlbGYuY3BGaWxlLCBzZWxmLmJhbnNGaWxlLCBzZWxmLmZ1bGxGaWxlCgoJIyA9PT0g0YPRgdGC0LDQvdC+0LLQutCwINC/0LDRg9C30Ysg0LzQtdC20LTRgyDQv9C+0YHRgtCw0LzQuCDQuCDRgtCw0LnQvNCw0YPRgtCwID09PQoJZGVmIHNldF9jb25zdHMoc2VsZiwgcG90b2Nrc0NvdW50KToKCQlpZiBwb3RvY2tzQ291bnQgPT0gMDoKCQkJVElNRU9VVCA9IDYwCgkJCVBBVVNFID0gNjAKCQkJc2VsZi5wb3RvY2tzQ291bnQgPSA0CgkJZWxzZToKCQkJVElNRU9VVCA9IDEwCgkJCVBBVVNFID0gMjAKCQlyZXR1cm4gVElNRU9VVCwgUEFVU0UKCgkj
ID09PSDQv9C+0LvRg9GH0LXQvdC40LUg0LrQsNC30ZHQvdC90L7Qs9C+INC60LvRjtGH0LAgPT09CglkZWYgZ2V0X2tleShzZWxmLCBzb2x2ZXIpOgoJCWlmIHNvbHZlciA9PSAwOgoJCQlzb2x2ZXJTdHIgPSAieGNhcHRjaGEiCgkJCXByaW50KCLQn9GL0YLQsNGO0YHRjCDQv9C+0LvRg9GH0LjRgtGMINC60LDQt9C10L3Ri9C5INC60LvRjtGHINC00LvRjyDQuNC60YHQutCw0L/RgtGH0LguLi4iKQoJCWVsaWYgc29sdmVyID09IDE6CgkJCXNvbHZlclN0ciA9ICJndXJvY2FwdGNoYSIKCQkJcHJpbnQoItCf0YvRgtCw0Y7RgdGMINC/0L7Qu9GD0YfQuNGC0Ywg0LrQsNC30LXQvdGL0Lkg0LrQu9GO0Ycg0LTQu9GPINCz0YPRgNC+0LrQsNC/0YLRh9C4Li4uIikKCQllbGlmIHNvbHZlciA9PSAyOgoJCQlzb2x2ZXJTdHIgPSAiYW50aWNhcHRjaGEiCgkJCXByaW50KCLQn9GL0YLQsNGO0YHRjCDQv9C+0LvRg9GH0LjRgtGMINC60LDQt9C10L3Ri9C5INC60LvRjtGHINC00LvRjyDQsNC90YLQuNC60LDQv9GH0LguLi4iKQoKCQlrZXlyZXEgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vMmNoLXJpLmdhL2NhcHRjaGEvJytzb2x2ZXJTdHIpCgkJaWYga2V5cmVxLnN0YXR1c19jb2RlID09IDIwMCBhbmQgbGVuKGtleXJlcS50ZXh0KSA9PSAzMjoKCQkJcHJpbnQoItCa0LvRjtGHINC30LDQs9GA0YPQttC10L0hIikKCQkJa2V5ID0ga2V5cmVxLnRleHQKCQllbGlmIGtleXJlcS5zdGF0dXNfY29kZSA9PSA0MDQgb3IgbGVuKGtleXJlcS50ZXh0KSA9PSAwOgoJCQlwcmludCgi0JrQu9GO0Ycg0L3QtdC00L7RgdGC0YPQv9C10L0hIikKCQkJZXhpdCgpCgkJZWxzZToKCQkJcHJpbnQoItCf0L7Qu9GD0YfQtdC9INC90LXQvtC20LjQtNCw0L3QvdGL0Lkg0L7RgtCy0LXRgiDQvtGCINGB0LXRgNCy0LXRgNCwOiIsIGtleXJlcSwga2V5cmVxLnRleHQpCgkJCWV4aXQoKQoJCXNlbGYuc2V0X2tleShzb2x2ZXIsIGtleSkKCQlyZXR1cm4ga2V5LCBrZXlyZXEKCgkjID09PSDQstCw0LvQuNC00LDRhtC40Y8g0LrQu9GO0YfQsCA9PT0KCWRlZiBzZXRfa2V5KHNlbGYsIHNvbHZlciwga2V5KToKCQlpZiBrZXkgPT0gIjAiOgoJCQlrZXksIGtleXJlcSA9IHNlbGYuZ2V0X2tleShzb2x2ZXIpCgkJZWxpZiBsZW4oa2V5KSA9PSAzMjoKCQkJcHJpbnQoItCS0LXRgNC40YTQuNGG0LjRgNGD0LXQvCDQutC70Y7Rhy4uLiIpCgkJCWlmIHNvbHZlciA9PSAwOgoJCQkJa2V5U3RhdHVzID0gcmVxdWVzdHMuZ2V0KCJodHRwOi8veC1jYXB0Y2hhMi5ydS9yZXMucGhwP2tleT0iICsga2V5ICsgIiZhY3Rpb249Z2V0YmFsYW5jZSIpCgkJCQlpZiBrZXlTdGF0dXMuc3RhdHVzX2NvZGUgPT0gMjAwOgoJCQkJCWlmIGtleVN0YXR1cy50ZXh0ID09ICJFUlJPUl9LRVlfVVNFUiI6CgkJCQkJCXByaW50KCLQmtC70Y7RhyDQvdC1INGB0YPRidC10YHRgtCy0YPQtdGCISIpCgkJCQkJCWV4aXQoKQoJCQkJCWVsaWYga2V5U3RhdHVzLnRleHQgPT0gIkVSUk9SX1BBVVNFX1NFUlZJQ0UiOgoJCQkJCQlwcmludCgi0KHQtdGA0LLQtdGAINC90LAg0L/RgNC+0YTQuNC70LDQutGC0LjQutC1LCDQuNGB0L/QvtC70YzQt9GD0Lkg0LTRgNGD0LPQvtC5INGB0L7Qu9Cy0LXRgC4iKQoJCQkJCQlleGl0KCkKCQkJCQlrZXl4YyA9IGtleVN0YXR1cy50ZXh0CgkJCQkJa2V5eGMgPSBrZXl4Yy5zcGxpdCgifCIpCgkJCQkJcHJpbnQoItCa0LvRjtGHINC/0L7QtNGC0LLQtdGA0LbQtNGR0L0sINCy0LDRiCDQsdCw0LvQsNC90YE6Iiwga2V5eGNbMV0pCgkJCQllbGlmIGtleVN0YXR1cy5zdGF0dXNfY29kZSA9PSA1MDA6CgkJCQkJcHJpbnQoItCY0LrRgdC60LDQv9GH0LAg0LfQsNCx0LvQvtC60LjRgNC+0LLQsNC70LAg0YLQstC+0LkgSVAsINC/0LXRgNC10LfQsNCz0YDRg9C30Lgg0YDQvtGD0YLQtdGAISIpCgkJCQkJZXhpdCgpCgoJCQllbGlmIHNvbHZlciA9PSAxIG9yIHNvbHZlciA9PSAyOgoJCQkJaWYgc29sdmVyID09IDE6CgkJCQkJa2V5U3RhdHVzID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9hcGkuY2FwdGNoYS5ndXJ1L2dldEJhbGFuY2UiLCBqc29uPXsiY2xpZW50S2V5Ijoga2V5fSwgdmVyaWZ5PUZhbHNlKS5qc29uKCkKCQkJCWVsc2U6CgkJCQkJa2V5U3RhdHVzID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9hcGkuYW50aS1jYXB0Y2hhLmNvbS9nZXRCYWxhbmNlIiwganNvbj17ImNsaWVudEtleSI6IGtleX0sIHZlcmlmeT1GYWxzZSkuanNvbigpCgkJCQlpZiAoa2V5U3RhdHVzWyJlcnJvcklkIl0gPT0gMCk6CgkJCQkJcHJpbnQoItCa0LvRjtGHINC/0L7QtNGC0LLQtdGA0LbQtNGR0L0sINCy0LDRiCDQsdCw0LvQsNC90YE6IiwgKGtleVN0YXR1c1siYmFsYW5jZSJdKSkKCQkJCWVsaWYgKGtleVN0YXR1c1siZXJyb3JJZCJdID09IDEpOgoJCQkJCWlmIChrZXlTdGF0dXNbImVycm9yRGVzY3JpcHRpb24iXSA9PSAiRVJST1JfS0VZX0RPRVNfTk9UX0VYSVNUIik6CgkJCQkJCXByaW50KCLQmtC70Y7RhyDQvdC1INGB0YPRidC10YHRgtCy0YPQtdGCISIpCgkJCQkJCWV4aXQoKQoJCQkJCWVsc2U6CgkJCQkJCXByaW50KGtleVN0YXR1c1siZXJyb3JEZXNjcmlwdGlvbiJdKQoJCQkJCQlleGl0KCkKCQkJa2V5cmVxID0gMAoJCWVsc2U6CgkJCXByaW50KCLQndC10L/RgNCw
0LLQuNC70YzQvdC+INCy0LLQtdC00LXQvSDQutC70Y7RhyEiKQoJCQlleGl0KCkKCQlyZXR1cm4gc29sdmVyLCBrZXksIGtleXJlcQoKCSMgPT09INGD0YHRgtCw0L3QvtCy0LrQsCDRgNC10LbQuNC80LAg0LLQsNC50L/QsNC70LrQuCA9PT0KCWRlZiBzZXRfbW9kZShzZWxmLCBtb2RlKToKCQlpZiBtb2RlID09IDQ6CgkJCXdpdGggb3BlbihzZWxmLmNwRmlsZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgnKSBhcyBmaWxlOgoJCQkJcGFzdGVzID0gZmlsZS5yZWFkKCkKCQkJCXBhc3RlcyA9IHBhc3Rlcy5zcGxpdCgiXG5cbiIpCgkJCQliaWdQYXN0ZSA9IDAKCQllbGlmIG1vZGUgPT0gODoKCQkJd2l0aCBvcGVuKHNlbGYuYmFuc0ZpbGUsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZmlsZToKCQkJCXBhc3RlcyA9IGZpbGUucmVhZCgpCgkJCQlwYXN0ZXMgPSBwYXN0ZXMuc3BsaXQoIlxuXG4iKQoJCQkJYmlnUGFzdGUgPSAwCgkJZWxpZiBtb2RlID09IDY6CgkJCWJpZ1Bhc3RlID0gIiIKCQkJd2l0aCBvcGVuKHNlbGYuZnVsbEZpbGUsICdyJywgZW5jb2Rpbmc9J3V0Zi04JykgYXMgZmlsZToKCQkJCWdvdm5vID0gW3Jvdy5zdHJpcCgpIGZvciByb3cgaW4gZmlsZV0KCQkJYmlnUGFzdGUgPSAnXHhhMCcuam9pbihnb3ZubykKCQkJYmlnUGFzdGUgKz0gJ1x4YTAnCgkJCXBhc3RlcyA9IDAKCQllbHNlOgoJCQlwYXN0ZXMgPSAwCgkJCWJpZ1Bhc3RlID0gMAoJCXJldHVybiBtb2RlLCBwYXN0ZXMsIGJpZ1Bhc3RlCgoJIyA9PT0g0YPRgdGC0LDQvdC+0LLQutCwINGC0YDQuNCz0LPQtdGA0LAgPT09CglkZWYgc2V0X3RyaWdnZXIoc2VsZiwgZm9ybSwgc2hyYXBuZWxDaGFyZ2UsIG1pblBvc3RzQ291bnQsIGFyZ3MpOgoJCWlmIHNocmFwbmVsQ2hhcmdlID09IDA6ICMgYW5kIHNlbGYudGhyZWFkID4gMQoJCQlzZWxmLnRocmVhZHMuYXBwZW5kKFRocmVhZChzZWxmLmJvYXJkLCBzZWxmLnRocmVhZCwgc2VsZi5tb2RlLCBmb3JtKSkKCQllbGlmIHNocmFwbmVsQ2hhcmdlID4gMDogIyBhbmQgc2VsZi50aHJlYWQgPiAwCgkJCXNlbGYuY2F0YWxvZyA9IENhdGFsb2coc2VsZi5ib2FyZCkKCQkJaWYgbWluUG9zdHNDb3VudCA9PSAtMToKCQkJCWZvciBpIGluIHJhbmdlKHNocmFwbmVsQ2hhcmdlKToKCQkJCQlzZWxmLnRocmVhZHMuYXBwZW5kKFRocmVhZChzZWxmLmJvYXJkLCBhcmdzWzIzK2ldLCBzZWxmLm1vZGUsIGZvcm0pKQoJCQllbHNlOgoJCQkJaSA9IDAKCQkJCWZvciB0aHJlYWQgaW4gc2VsZi5jYXRhbG9nLnNjaGVtYVsidGhyZWFkcyJdOgoJCQkJCWlmIGludCh0aHJlYWRbInBvc3RzX2NvdW50Il0pID49IG1pblBvc3RzQ291bnQ6CgkJCQkJCXNlbGYudGhyZWFkcy5hcHBlbmQoVGhyZWFkKHNlbGYuYm9hcmQsIHN0cih0aHJlYWRbIm51bSJdKSwgc2VsZi5tb2RlLCBmb3JtKSkKCQkJCQkJaSArPSAxCgkJCQkJCWlmIGkgPT0gc2hyYXBuZWxDaGFyZ2U6CgkJCQkJCQlicmVhawoJCQkJc2hyYXBuZWxDaGFyZ2UgPSBpCgoJCWlmIHNlbGYuY2hhb3MgIT0gIi0xIiBhbmQgc2VsZi5jaGFvcyAhPSAiMCI6CgkJCXRhcmdldFRocmVhZCA9IFRocmVhZChzZWxmLmJvYXJkLCBzZWxmLmNoYW9zLCBzZWxmLm1vZGUsIGZvcm0pCgkJZWxzZToKCQkJdGFyZ2V0VGhyZWFkID0gc2VsZi50aHJlYWRzWzBdCgoJCXJldHVybiBmb3JtLCBzaHJhcG5lbENoYXJnZSwgdGFyZ2V0VGhyZWFkCgoJIyA9PT0g0YPRgdGC0LDQvdC+0LLQutCwINC/0YDQuNC60YDQtdC/0LvQtdC90LjQuSA9PT0KCWRlZiBzZXRfbWVkaWEoc2VsZiwgbWVkaWFLaW5kLCBtZWRpYUdyb3VwLCBtZWRpYXNDb3VudCk6CgkJbWVkaWFQYXRocyA9IFtdCgkJaWYgbWVkaWFLaW5kICE9IDA6CgkJCWlmIG1lZGlhS2luZCA+IDE6CgkJCQlzZWxmLlRJTUVPVVQgKz0gMzAKCQkJaWYgbWVkaWFLaW5kIDwgMzoKCQkJCWlmIG1lZGlhS2luZCA9PSAxOgoJCQkJCW1lZGlhRGlyID0gImltYWdlcyIKCQkJCWVsaWYgbWVkaWFLaW5kID09IDI6CgkJCQkJbWVkaWFEaXIgPSAidmlkZW9zIgoJCQkJaWYgbGVuKG1lZGlhR3JvdXApID4gMCBhbmQgbWVkaWFHcm91cCAhPSAiMCI6CgkJCQkJbWVkaWFEaXIgKz0gIi8iCgkJCQkJbWVkaWFEaXIgKz0gbWVkaWFHcm91cAoJCQkJZm9yIG1lZGlhIGluIG9zLmxpc3RkaXIoIi4vIittZWRpYURpcik6CgkJCQkJaWYgbWVkaWEuZW5kc3dpdGgoIi5qcGciKSBvciBtZWRpYS5lbmRzd2l0aCgiLnBuZyIpIG9yIG1lZGlhLmVuZHN3aXRoKCIuZ2lmIikgb3IgbWVkaWEuZW5kc3dpdGgoIi5ibXAiKSBvciBtZWRpYS5lbmRzd2l0aCgiLm1wNCIpIG9yIG1lZGlhLmVuZHN3aXRoKCIud2VibSIpOgoJCQkJCQltZWRpYVBhdGhzLmFwcGVuZCgiLi8iK21lZGlhRGlyKyIvIittZWRpYSkKCQkJCWlmIG1lZGlhc0NvdW50ID09IDA6CgkJCQkJbWVkaWFLaW5kID0gMAoKCQkJZWxpZiBzZWxmLnNocmFwbmVsQ2hhcmdlID09IDA6CgkJCQlmb3IgcG9zdCBpbiBzZWxmLnRocmVhZHNbMF0ucG9zdHM6CgkJCQkJZm9yIG1lZGlhIGluIHBvc3QubWVkaWFzOgoJCQkJCQlwcmludCgi0KHQutCw0YfQuNCy0LDRjiAiLCBtZWRpYS5uYW1lLCAiKCIrc3RyKHBvc3QubnVtKSsiLyIrc3RyKHNlbGYudGhyZWFkc1swXS5wb3N0c0NvdW50KSsiINC/0L7RgdGCKSIpCgkJ
CQkJCW1lZGlhLmRvd25sb2FkKCkKCQkJZWxzZToKCQkJCXNlbGYuVElNRU9VVCArPSA2MAoJCWVsc2U6CgkJCW1lZGlhc0NvdW50ID0gMAoJCXJldHVybiBtZWRpYUtpbmQsIG1lZGlhUGF0aHMsIG1lZGlhc0NvdW50CgoKCgoKCgpjbGFzcyBDYXB0Y2hhU29sdmVyX1hDYXB0Y2hhXzJjaDoKCglkZWYgX19pbml0X18oc2VsZiwga2V5LCBrZXlyZXEpOgoJCXNlbGYuYXBpID0gImh0dHA6Ly94LWNhcHRjaGEyLnJ1L2luLnBocCIKCQlzZWxmLmtleSA9IGtleQoJCXByaW50KCJTb2x2ZXIgJ1gtQ2FwdGNoYScgaW5pdGlhbGl6ZWQgd2l0aCBrZXk6ICIgKyBzZWxmLmtleSkKCglkZWYgc29sdmUoc2VsZiwgaW1hZ2UsIGJhZHByb3hpZXMpOgoKCQl3aGlsZSBUcnVlOgoJCQl0YXNrID0gKCgna2V5Jywgc2VsZi5rZXkpLCAoJ21ldGhvZCcsICd1c2VycmVjYXB0Y2hhJyksICgnZ29vZ2xla2V5JywgJzZMZVFZejRVQUFBQUFMOEpDazM1d0hTdjZjdUVWNVB5TGhJNkl4c00nKSwgKCdwYWdldXJsJywgJ2h0dHBzOi8vMmNoLmhrL2IvJykpCgkJCWRhdGEgPSByZXF1ZXN0cy5wb3N0KHNlbGYuYXBpLCBkYXRhPXRhc2ssIHZlcmlmeT1GYWxzZSkKCgkJCXJlc3BvbnNlID0gZGF0YS50ZXh0CgkJCXJlc3BvbnNlID0gcmVzcG9uc2Uuc3BsaXQoInwiKQoKCQkJaWYgKHJlc3BvbnNlWzBdID09ICJPSyIpOgoKCQkJCXdoaWxlIFRydWU6CgkJCQkJc29sdmVEYXRhID0gcmVxdWVzdHMuZ2V0KCJodHRwOi8veC1jYXB0Y2hhMi5ydS9yZXMucGhwP2tleT0iICsgc2VsZi5rZXkgKyAiJmlkPSIgKyByZXNwb25zZVsxXSkKCQkJCQlzb2x2ZVJlc3BvbnNlID0gc29sdmVEYXRhLnRleHQgCgkJCQkJc29sdmVSZXNwb25zZSA9IHNvbHZlUmVzcG9uc2Uuc3BsaXQoInwiKQoKCQkJCQlpZiAoc29sdmVSZXNwb25zZVswXSA9PSAiT0siKToKCQkJCQkJU3RhdHMuaW5jQ2FwdGNoYXMoKQoJCQkJCQlyZXR1cm4gc29sdmVSZXNwb25zZVsxXQoKCQkJCQl0aW1lLnNsZWVwKDMpCgkJCXRpbWUuc2xlZXAoMykKCmNsYXNzIENhcHRjaGFTb2x2ZXJfY2FwdGNoYWd1cnVfMmNoOgoKCWRlZiBfX2luaXRfXyhzZWxmLCBrZXksIGtleXJlcSk6CgkJc2VsZi5hcGkgPSAiaHR0cHM6Ly9hcGkuY2FwdGNoYS5ndXJ1LyIKCQlzZWxmLmtleSA9IGtleQoJCXByaW50KCJTb2x2ZXIgJ2NhcHRjaGEuZ3VydScgaW5pdGlhbGl6ZWQgd2l0aCBrZXk6ICIgKyBzZWxmLmtleSkKCglkZWYgc29sdmUoc2VsZiwgaW1hZ2UsIGJhZHByb3hpZXMpOgoJCXRhc2sgPSB7fQoJCXRhc2tbInR5cGUiXSA9ICJOb0NhcHRjaGFUYXNrIgoJCXRhc2tbIndlYnNpdGVVUkwiXSA9ICJodHRwczovLzJjaC5oay9iLyIKCQl0YXNrWyJ3ZWJzaXRlS2V5Il0gPSAiNkxlUVl6NFVBQUFBQUw4SkNrMzV3SFN2NmN1RVY1UHlMaEk2SXhzTSIKCQlkYXRhID0gcmVxdWVzdHMucG9zdChzZWxmLmFwaSArICJjcmVhdGVUYXNrIiwganNvbj17ImNsaWVudEtleSI6IHNlbGYua2V5LCAidGFzayI6IHRhc2t9LCB2ZXJpZnk9RmFsc2UpLmpzb24oKQoJCWlmIChkYXRhWyJlcnJvcklkIl0gPT0gMCk6CgkJCXdoaWxlIFRydWU6CgkJCQlyZXNwb25zZSA9IHJlcXVlc3RzLnBvc3Qoc2VsZi5hcGkgKyAiZ2V0VGFza1Jlc3VsdCIsIGpzb249eyJjbGllbnRLZXkiIDogc2VsZi5rZXksICJ0YXNrSWQiIDogc3RyKGRhdGFbInRhc2tJZCJdKX0sIHZlcmlmeT1GYWxzZSkuanNvbigpCgkJCQlpZiAocmVzcG9uc2VbInN0YXR1cyJdID09ICJyZWFkeSIpOgoJCQkJCXJldHVybiByZXNwb25zZVsic29sdXRpb24iXVsiZ1JlY2FwdGNoYVJlc3BvbnNlIl0KCQkJCXRpbWUuc2xlZXAoMykKCQl0aW1lLnNsZWVwKDMpCgpjbGFzcyBDYXB0Y2hhU29sdmVyX2FudGljYXB0Y2hhXzJjaDoKCglkZWYgX19pbml0X18oc2VsZiwga2V5LCBrZXlyZXEpOgoJCXNlbGYuYXBpID0gImh0dHA6Ly9hcGkuYW50aS1jYXB0Y2hhLmNvbS8iCgkJc2VsZi5rZXkgPSBrZXkKCQlwcmludCgiU29sdmVyICdhbnRpLWNhcHRjaGEnIGluaXRpYWxpemVkIHdpdGgga2V5OiAiICsgc2VsZi5rZXkpCgoJZGVmIHNvbHZlKHNlbGYsIGltYWdlLCBiYWRwcm94aWVzKToKCQl0YXNrID0ge30KCQl0YXNrWyJ0eXBlIl0gPSAiSW1hZ2VUb1RleHRUYXNrIgoJCXRhc2tbImJvZHkiXSA9IGJhc2U2NC5iNjRlbmNvZGUoaW1hZ2UpLmRlY29kZSgidXRmLTgiKQoJCXRhc2tbInBocmFzZSJdID0gRmFsc2UKCQl0YXNrWyJjYXNlIl0gPSBGYWxzZQoJCXRhc2tbIm51bWVyaWMiXSA9IDEKCQl0YXNrWyJtYXRoIl0gPSBGYWxzZQoJCXRhc2tbIm1pbkxlbmd0aCJdID0gNgoJCXRhc2tbIm1heExlbmd0aCJdID0gNgoJCWRhdGEgPSByZXF1ZXN0cy5wb3N0KHNlbGYuYXBpICsgImNyZWF0ZVRhc2siLCBqc29uPXsiY2xpZW50S2V5Ijogc2VsZi5rZXksICJ0YXNrIjogdGFza30sIHZlcmlmeT1GYWxzZSkuanNvbigpCgkJaWYgKGRhdGFbImVycm9ySWQiXSA9PSAwKToKCQkJd2hpbGUgVHJ1ZToKCQkJCXJlc3BvbnNlID0gcmVxdWVzdHMucG9zdChzZWxmLmFwaSArICJnZXRUYXNrUmVzdWx0IiwganNvbj17ImNsaWVudEtleSIgOiBzZWxmLmtleSwgInRhc2tJZCIgOiBzdHIoZGF0YVsidGFza0lkIl0pfSwgdmVyaWZ5PUZhbHNlKS5qc29uKCkKCQkJCWlmIChyZXNwb25zZVsi
c3RhdHVzIl0gPT0gInJlYWR5Iik6CgkJCQkJcmV0dXJuIHJlc3BvbnNlWyJzb2x1dGlvbiJdWyJ0ZXh0Il0KCQkJCXRpbWUuc2xlZXAoMykKCgoKCgoKIyA9PT09PT0gWC3QutCw0L/Rh9CwID09PT09PQpjbGFzcyBDYXB0Y2hhU29sdmVyX1hDYXB0Y2hhX3JlOgoKCWRlZiBfX2luaXRfXyhzZWxmLCBrZXksIGtleXJlcSk6CgkJc2VsZi5hcGkgPSAiaHR0cDovL3gtY2FwdGNoYTIucnUvaW4ucGhwIgoJCXNlbGYua2V5ID0ga2V5CgkJdHJ5OgoJCQlpZiBrZXlyZXEuc3RhdHVzX2NvZGUgPT0gMjAwOgoJCQkJcHJpbnQoIlNvbHZlciAnWC1DYXB0Y2hhJyBpbml0aWFsaXplZCB3aXRoIGtleTogW9CU0JDQndCd0KvQlSDQo9CU0JDQm9CV0J3Qq10iKQoJCWV4Y2VwdCBFeGNlcHRpb246CgkJCXByaW50KCJTb2x2ZXIgJ1gtQ2FwdGNoYScgaW5pdGlhbGl6ZWQgd2l0aCBrZXk6ICIgKyBzZWxmLmtleSkKCglkZWYgc29sdmUoc2VsZiwgaW1hZ2UsIGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KToKCgkJd2hpbGUgVHJ1ZToKCQkJdGFzayA9ICgoJ2tleScsIHNlbGYua2V5KSwgKCdtZXRob2QnLCAndXNlcnJlY2FwdGNoYScpLCAoJ2dvb2dsZWtleScsICc2TGVRWXo0VUFBQUFBTDhKQ2szNXdIU3Y2Y3VFVjVQeUxoSTZJeHNNJyksICgncGFnZXVybCcsICdodHRwczovLzJjaC5oay9iLycpKQoJCQlkYXRhID0gcmVxdWVzdHMucG9zdChzZWxmLmFwaSwgZGF0YT10YXNrLCB2ZXJpZnk9RmFsc2UpCgoJCQlyZXNwb25zZSA9IGRhdGEudGV4dAoJCQlyZXNwb25zZSA9IHJlc3BvbnNlLnNwbGl0KCJ8IikKCgkJCWlmIChyZXNwb25zZVswXSA9PSAiT0siKToKCgkJCQl3aGlsZSBUcnVlOgoJCQkJCXNvbHZlRGF0YSA9IHJlcXVlc3RzLmdldCgiaHR0cDovL3gtY2FwdGNoYTIucnUvcmVzLnBocD9rZXk9IiArIHNlbGYua2V5ICsgIiZpZD0iICsgcmVzcG9uc2VbMV0pCgkJCQkJc29sdmVSZXNwb25zZSA9IHNvbHZlRGF0YS50ZXh0IAoJCQkJCXNvbHZlUmVzcG9uc2UgPSBzb2x2ZVJlc3BvbnNlLnNwbGl0KCJ8IikKCgkJCQkJaWYgKHNvbHZlUmVzcG9uc2VbMF0gPT0gIk9LIik6CgkJCQkJCVN0YXRzLmluY0NhcHRjaGFzKCkKCQkJCQkJcmV0dXJuIHNvbHZlUmVzcG9uc2VbMV0KCgkJCQkJdGltZS5zbGVlcCgzKQoJCQllbGlmIGRhdGEudGV4dCA9PSAiRVJST1JfS0VZX1VTRVIiOgoJCQkJcHJpbnQoIlxu0J7RiNC40LHQutCwINC60LvRjtGH0LAsINC90LUg0LzQvtCz0YMg0L/RgNC+0LTQvtC70LbQsNGC0Ywg0YDQsNCx0L7RgtGDLi4uIikKCQkJCXNhZmVfcXVpdChiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQkJdGltZS5zbGVlcCgzKQoKCiMgPT09PT09INCT0YPRgNGDLdC60LDQv9GH0LAgPT09PT09CmNsYXNzIENhcHRjaGFTb2x2ZXJfY2FwdGNoYWd1cnVfcmU6CgoJZGVmIF9faW5pdF9fKHNlbGYsIGtleSwga2V5cmVxKToKCQlzZWxmLmFwaSA9ICJodHRwczovL2FwaS5jYXB0Y2hhLmd1cnUvIgoJCXNlbGYua2V5ID0ga2V5CgkJdHJ5OgoJCQlpZiBrZXlyZXEuc3RhdHVzX2NvZGUgPT0gMjAwOgoJCQkJcHJpbnQoIlNvbHZlciAnY2FwdGNoYS5ndXJ1JyBpbml0aWFsaXplZCB3aXRoIGtleTogW9CU0JDQndCd0KvQlSDQo9CU0JDQm9CV0J3Qq10iKQoJCWV4Y2VwdCBFeGNlcHRpb246CgkJCXByaW50KCJTb2x2ZXIgJ2NhcHRjaGEuZ3VydScgaW5pdGlhbGl6ZWQgd2l0aCBrZXk6ICIgKyBzZWxmLmtleSkKCglkZWYgc29sdmUoc2VsZiwgaW1hZ2UsIGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KToKCQl0YXNrID0ge30KCQl0YXNrWyJ0eXBlIl0gPSAiTm9DYXB0Y2hhVGFzayIKCQl0YXNrWyJ3ZWJzaXRlVVJMIl0gPSAiaHR0cHM6Ly8yY2guaGsvYi8iCgkJdGFza1sid2Vic2l0ZUtleSJdID0gIjZMZVFZejRVQUFBQUFMOEpDazM1d0hTdjZjdUVWNVB5TGhJNkl4c00iCgkJZGF0YSA9IHJlcXVlc3RzLnBvc3Qoc2VsZi5hcGkgKyAiY3JlYXRlVGFzayIsIGpzb249eyJjbGllbnRLZXkiOiBzZWxmLmtleSwgInRhc2siOiB0YXNrfSwgdmVyaWZ5PUZhbHNlKS5qc29uKCkKCQlpZiAoZGF0YVsiZXJyb3JJZCJdID09IDApOgoJCQl3aGlsZSBUcnVlOgoJCQkJcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHNlbGYuYXBpICsgImdldFRhc2tSZXN1bHQiLCBqc29uPXsiY2xpZW50S2V5IiA6IHNlbGYua2V5LCAidGFza0lkIiA6IHN0cihkYXRhWyJ0YXNrSWQiXSl9LCB2ZXJpZnk9RmFsc2UpLmpzb24oKQoJCQkJaWYgKHJlc3BvbnNlWyJzdGF0dXMiXSA9PSAicmVhZHkiKToKCQkJCQlyZXR1cm4gcmVzcG9uc2VbInNvbHV0aW9uIl1bImdSZWNhcHRjaGFSZXNwb25zZSJdCgkJCQl0aW1lLnNsZWVwKDMpCgkJZWxpZiAoZGF0YVsiZXJyb3JJZCJdID09IDEpOgoJCQlpZiAoZGF0YVsiZXJyb3JEZXNjcmlwdGlvbiJdID09ICJFUlJPUl9LRVlfRE9FU19OT1RfRVhJU1QiKToKCQkJCXByaW50KCJcbtCa0LvRjtGHINC+0YLQvtC30LLQsNC9LCDQvdC1INC80L7Qs9GDINC/0YDQvtC00L7Qu9C20LDRgtGMINGA0LDQsdC+0YLRgy4uLiIpCgkJCQlzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpCgkJCWVsaWYgKGRhdGFbImVycm9yRGVzY3JpcHRpb24iXSA9PSAiRVJST1JfWkVST19CQUxBTkNFIik6CgkJCQlwcmludCgi
XG7Ql9Cw0LrQvtC90YfQuNC70LjRgdGMINC00LXQvdGM0LPQuCDQvdCwINC60LDQv9GH0LUsINC90LUg0LzQvtCz0YMg0L/RgNC+0LTQvtC70LbQsNGC0Ywg0YDQsNCx0L7RgtGDLi4uIikKCQkJCXNhZmVfcXVpdChiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQkJZWxpZiAoZGF0YVsiZXJyb3JEZXNjcmlwdGlvbiJdID09ICJFUlJPUl9OT19TTE9UX0FWQUlMQUJMRSIpOgoJCQkJcHJpbnQoIlxu0J3QtdGCINGB0LLQvtCx0L7QtNC90YvRhSDQuNC90LTRg9GB0YHQvtCyINC90LAg0YHQtdGA0LLQtdGA0LUsINGC0LDQudC80LDRg9GCIDEwINGB0LXQutGD0L3QtC4uLiIpCgkJCQl0aW1lLnNsZWVwKDcpCgkJCWVsc2U6CgkJCQlwcmludCgiXG7Qn9GA0L7QuNC30L7RiNC70LAg0L3QtdCy0LXQtNC+0LzQsNGPINC10LHQsNC90LDRjyDRhdGD0LnQvdGPLCDRgdC+0YDRj9C9LiDQktC+0YIg0L7RgtCy0LXRgiDQvtGCINGB0LXRgNCy0LXRgNCwOiIsIChkYXRhWyJlcnJvckRlc2NyaXB0aW9uIl0pKQoJCQkJc2FmZV9xdWl0KGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KQoJCXRpbWUuc2xlZXAoMykKCgojID09PT09PSDQkNC90YLQuNC60LDQv9GH0LAgPT09PT09CmNsYXNzIENhcHRjaGFTb2x2ZXJfYW50aWNhcHRjaGFfcmU6CgoJZGVmIF9faW5pdF9fKHNlbGYsIGtleSwga2V5cmVxKToKCQlzZWxmLmFwaSA9ICJodHRwOi8vYXBpLmFudGktY2FwdGNoYS5jb20vIgoJCXNlbGYua2V5ID0ga2V5CgkJdHJ5OgoJCQlpZiBrZXlyZXEuc3RhdHVzX2NvZGUgPT0gMjAwOgoJCQkJcHJpbnQoIlNvbHZlciAnYW50aS1jYXB0Y2hhJyBpbml0aWFsaXplZCB3aXRoIGtleTogW9CU0JDQndCd0KvQlSDQo9CU0JDQm9CV0J3Qq10iKQoJCWV4Y2VwdCBFeGNlcHRpb246CgkJCXByaW50KCJTb2x2ZXIgJ2FudGktY2FwdGNoYScgaW5pdGlhbGl6ZWQgd2l0aCBrZXk6ICIgKyBzZWxmLmtleSkKCglkZWYgc29sdmUoc2VsZiwgaW1hZ2UsIGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KToKCQl0YXNrID0ge30KCQl0YXNrWyJ0eXBlIl0gPSAiTm9DYXB0Y2hhVGFza1Byb3h5bGVzcyIKCQkjINC/0L7QutCwINGC0LDQuiwg0L/QvtC30LbQtSDQv9GA0LjQutGA0YPRh9GDINC/0LXRgNC10LTQsNGH0YMg0L3QsNGI0LjRhSDQv9GA0L7QutGB0LjRh9C10LoKCQl0YXNrWyJ3ZWJzaXRlVVJMIl0gPSAiaHR0cHM6Ly8yY2guaGsvYi8iCgkJdGFza1sid2Vic2l0ZUtleSJdID0gIjZMZVFZejRVQUFBQUFMOEpDazM1d0hTdjZjdUVWNVB5TGhJNkl4c00iCgkJZGF0YSA9IHJlcXVlc3RzLnBvc3Qoc2VsZi5hcGkgKyAiY3JlYXRlVGFzayIsIGpzb249eyJjbGllbnRLZXkiOiBzZWxmLmtleSwgInRhc2siOiB0YXNrfSwgdmVyaWZ5PUZhbHNlKS5qc29uKCkKCQlpZiAoZGF0YVsiZXJyb3JJZCJdID09IDApOgoJCQl3aGlsZSBUcnVlOgoJCQkJcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHNlbGYuYXBpICsgImdldFRhc2tSZXN1bHQiLCBqc29uPXsiY2xpZW50S2V5IiA6IHNlbGYua2V5LCAidGFza0lkIiA6IHN0cihkYXRhWyJ0YXNrSWQiXSl9LCB2ZXJpZnk9RmFsc2UpLmpzb24oKQoJCQkJaWYgKHJlc3BvbnNlWyJzdGF0dXMiXSA9PSAicmVhZHkiKToKCQkJCQlyZXR1cm4gcmVzcG9uc2VbInNvbHV0aW9uIl1bImdSZWNhcHRjaGFSZXNwb25zZSJdCgkJCQl0aW1lLnNsZWVwKDMpCgkJZWxpZiAoZGF0YVsiZXJyb3JJZCJdID09IDEpOgoJCQlpZiAoZGF0YVsiZXJyb3JEZXNjcmlwdGlvbiJdID09ICJFUlJPUl9LRVlfRE9FU19OT1RfRVhJU1QiKToKCQkJCXByaW50KCJcbtCa0LvRjtGHINC+0YLQvtC30LLQsNC9LCDQvdC1INC80L7Qs9GDINC/0YDQvtC00L7Qu9C20LDRgtGMINGA0LDQsdC+0YLRgy4uLiIpCgkJCQlzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpCgkJCWVsaWYgKGRhdGFbImVycm9yRGVzY3JpcHRpb24iXSA9PSAiRVJST1JfWkVST19CQUxBTkNFIik6CgkJCQlwcmludCgiXG7Ql9Cw0LrQvtC90YfQuNC70LjRgdGMINC00LXQvdGM0LPQuCDQvdCwINC60LDQv9GH0LUsINC90LUg0LzQvtCz0YMg0L/RgNC+0LTQvtC70LbQsNGC0Ywg0YDQsNCx0L7RgtGDLi4uIikKCQkJCXNhZmVfcXVpdChiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQkJZWxzZToKCQkJCXByaW50KCJcbtCf0YDQvtC40LfQvtGI0LvQsCDQvdC10LLQtdC00L7QvNCw0Y8g0LXQsdCw0L3QsNGPINGF0YPQudC90Y8sINGB0L7RgNGP0L0uINCS0L7RgiDQvtGC0LLQtdGCINC+0YIg0YHQtdGA0LLQtdGA0LA6IiwgKGRhdGFbImVycm9yRGVzY3JpcHRpb24iXSkpCgkJCQlzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpCgkJdGltZS5zbGVlcCgzKQoKCgoKCgojID09PT09PSDQnNCw0LrRgNC+0YHRiyDQvNCw0LrRgNC+0YHQuNC60LggPT09PT09CkNIQVJTID0gc3RyaW5nLmFzY2lpX3VwcGVyY2FzZSArIHN0cmluZy5kaWdpdHMKVEVYVF9DSEFSUyA9IHN0cmluZy5hc2NpaV91cHBlcmNhc2UgKyBzdHJpbmcuZGlnaXRzICsgc3RyaW5nLmFzY2lpX2xvd2VyY2FzZSArIChzdHJpbmcud2hpdGVzcGFjZSAqIDEwKSArIHN0cmluZy5wdW5jdHVhdGlvbgpOQU1FX1NJWkUgPSAxNApiYWRwcm94aWVzID0gW10KZm9yYmlkZGVucHJveHkg
PSBbXQoKCiMgPT09PT09INCo0LDQv9C60LAgPT09PT09CmRlZiBzaG93X2xvZ28oKToKCW9zLnN5c3RlbSgnY2xzJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAnY2xlYXInKQoJcHJpbnQoIlxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiIpCglwcmludCgiKiAgICAyQ0guSEsgV0lQRSBNQUNISU5FIC0gUmVDYXB0Y2hhIGVkaXRpb24gICAgKiIpCglwcmludCgiKiAgICAg0KLQvtC70YzQutC+INC00LvRjyDQstC90YPRgtGA0LXQvdC90LXQs9C+INC40YHQv9C+0LvRjNC30L7QstCw0L3QuNGPICAgICAgKiIpCglwcmludCgiKiAgICAgICAg0J7RgNC40LPQuNC90LDQu9GM0L3Ri9C5INC/0YDQvtC10LrRgjogZ2xvd19zdGljayAgICAgICAgKiIpCglwcmludCgiKiAgICAgINCR0YvQtNC70L7QutC+0LQ6IG93b2RlbHRhLCBrb2JhdG8sIGFyZWxpdmUgICAgICAqIikKCXByaW50KCIqICAgICAgICAgICAgY3J5cHRvc3RpbW9yLCB0c3VuYW1hcnUgICAgICAgICAgICAqIikKCXByaW50KCIqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIikKCgojID09PT09PSBBUEkg0LrQsNC/0YfQuCDRgdC+0YHQsNGH0LAgPT09PT09CmNsYXNzIENhcHRjaGE6CgoJZGVmIF9faW5pdF9fKHNlbGYsIHByb3h5LCBhZ2VudCwgYm9hcmQsIHRocmVhZCwgc29sdmVyLCBUSU1FT1VULCBjYXB0Y2hhVHlwZSk6CgkJaWYgKGNhcHRjaGFUeXBlKSA9PSAiMmNoIjoKCQkJc2VsZi5hcGkgPSAiaHR0cHM6Ly8yY2guaGsvYXBpL2NhcHRjaGEvMmNoYXB0Y2hhLyIKCQllbHNlOgoJCQlzZWxmLmFwaSA9ICJodHRwczovLzJjaC5oay9hcGkvY2FwdGNoYS9yZWNhcHRjaGEvaWQiCgkJc2VsZi5wcm94eSA9IHByb3h5CgkJc2VsZi5ib2FyZCA9IGJvYXJkCgkJc2VsZi50aHJlYWQgPSB0aHJlYWQKCQlzZWxmLnNvbHZlciA9IHNvbHZlcgoJCXNlbGYuVElNRU9VVCA9IFRJTUVPVVQKCQlzZWxmLnNldF9oZWFkZXJzKGFnZW50KQoKIwkJb3MuZW52aXJvblsiaHR0cHNfcHJveHkiXSA9IHNlbGYucHJveHlbImh0dHBzIl0KIwkJb3MuZW52aXJvblsiaHR0cF9wcm94eSJdID0gc2VsZi5wcm94eVsiaHR0cCJdCgoJCWNhcHRjaGEgPSByZXF1ZXN0cy5nZXQoc2VsZi5hcGkgKyAiaWQ/Ym9hcmQ9IiArIHNlbGYuYm9hcmQgKyAiJnRocmVhZD0iICsgc2VsZi50aHJlYWQsIHByb3hpZXM9c2VsZi5wcm94eSwgaGVhZGVycz1zZWxmLmhlYWRlcnMsIHRpbWVvdXQ9c2VsZi5USU1FT1VULCB2ZXJpZnk9RmFsc2UpLmpzb24oKQoJCXNlbGYuaWQgPSBjYXB0Y2hhWyJpZCJdCgkJc2VsZi5pbWFnZSA9IHJlcXVlc3RzLmdldChzZWxmLmFwaSArICJpbWFnZS8iICsgc2VsZi5pZCwgcHJveGllcz1zZWxmLnByb3h5LCBoZWFkZXJzPXNlbGYuaGVhZGVycywgdGltZW91dD1zZWxmLlRJTUVPVVQsIHZlcmlmeT1GYWxzZSkuY29udGVudAoKCWRlZiBzZXRfaGVhZGVycyhzZWxmLCBhZ2VudCk6CgkJc2VsZi5oZWFkZXJzID0ge30KCQlzZWxmLmhlYWRlcnNbIkhvc3QiXSA9ICIyY2guaGsiCgkJc2VsZi5oZWFkZXJzLnVwZGF0ZShhZ2VudCkKCQlzZWxmLmhlYWRlcnNbIkFjY2VwdCJdID0gInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LCovKjtxPTAuOCIKCQlzZWxmLmhlYWRlcnNbIkFjY2VwdC1MYW5ndWFnZSJdID0gInJ1LVJVLHJ1O3E9MC44LGVuLVVTO3E9MC41LGVuO3E9MC4zIgoJCXNlbGYuaGVhZGVyc1siQWNjZXB0LUVuY29kaW5nIl0gPSAiZ3ppcCwgZGVmbGF0ZSwgYnIiCgkJc2VsZi5oZWFkZXJzWyJDb25uZWN0aW9uIl0gPSAia2VlcC1hbGl2ZSIKCQlzZWxmLmhlYWRlcnNbIlVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHMiXSA9ICIxIgoKCWRlZiBzb2x2ZShzZWxmKToKCQlwcmludChzZWxmLnByb3h5WyJodHRwIl0sICJzb2x2aW5nIGNhcHRjaGEiKQoJCXNlbGYudmFsdWUgPSBzZWxmLnNvbHZlci5zb2x2ZShzZWxmLmltYWdlLCBiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCQlyZXR1cm4gKE5vbmUsIHNlbGYuaWQpLCAoTm9uZSwgc2VsZi52YWx1ZSkKCglkZWYgdmVyaWZ5KHNlbGYpOgoJCXJldHVybiByZXF1ZXN0cy5nZXQoc2VsZi5hcGkgKyAiY2hlY2svIiArIHNlbGYuaWQgKyAnP3ZhbHVlPScgKyBzZWxmLnZhbHVlLCBwcm94aWVzPXNlbGYucHJveHksIGhlYWRlcnM9c2VsZi5oZWFkZXJzLCB2ZXJpZnk9RmFsc2UsIHRpbWVvdXQ9c2VsZi5USU1FT1VUKS5qc29uKClbInJlc3VsdCJdID09IDEKCgojID09PT09PSDQn9C+0YHRgtC40L3QsyA9PT09PT0KY2xhc3MgTmV3UG9zdDoKCglkZWYgX19pbml0X18oc2VsZiwgcHJveHksIGFnZW50LCBib2FyZCwgdGhyZWFkLCBzb2x2ZXIsIGNhcHRjaGFUeXBlKToKCQlzZWxmLnByb3h5ID0geyJodHRwIjogcHJveHksICJodHRwcyI6IHByb3h5fQoJCXNlbGYuYWdlbnQgPSB7IlVzZXItQWdlbnQiOiBhZ2VudH0KCQlzZWxmLmJvYXJkID0gYm9hcmQKCQlzZWxmLnRocmVhZCA9IHRocmVhZAoJCXNlbGYuc29sdmVyID0gc29sdmVyCgkJc2VsZi5jYXB0Y2hhVHlwZSA9IGNhcHRjaGFUeXBlCgkJc2VsZi5idWZmZXIgPSB7fQoJCXNlbGYucGFyYW1zID0gW10KCQlzZWxmLnBhcmFt
cy5hcHBlbmQoKCJ0YXNrIiwgKE5vbmUsICJwb3N0IikpKQoJCXNlbGYucGFyYW1zLmFwcGVuZCgoImJvYXJkIiwgKE5vbmUsIHNlbGYuYm9hcmQpKSkKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJ0aHJlYWQiLCAoTm9uZSwgc2VsZi50aHJlYWQpKSkKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJ1c2VyY29kZSIsIChOb25lLCAiIikpKQoJCXNlbGYucGFyYW1zLmFwcGVuZCgoImNvZGUiLCAoTm9uZSwgIiIpKSkKCQlpZiBzZWxmLmNhcHRjaGFUeXBlID09ICIyY2giOgoJCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJjYXB0Y2hhX3R5cGUiLCAoTm9uZSwgIjJjaGFwdGNoYSIpKSkKCQllbHNlOgoJCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJjYXB0Y2hhX3R5cGUiLCAoTm9uZSwgInJlY2FwdGNoYSIpKSkKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJvZWtha2lfaW1hZ2UiLCAoTm9uZSwgIiIpKSkKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJvZWtha2lfbWV0YWRhdGEiLCAoTm9uZSwgIiIpKSkKIwkJc2VsZi5wYXJhbXNbImctcmVjYXB0Y2hhLXJlc3BvbnNlIl0gPSAoTm9uZSwgIiIpCiMJCXNlbGYucGFyYW1zWyJmb3JtaW1hZ2VzIl0gPSBbXQoKCQlzZWxmLnNldF9oZWFkZXJzKCkKIwkJc2VsZi5zZXRfc3ViamVjdCgi0J7RgtCy0LXRgiIpCgoJZGVmIHNldF9oZWFkZXJzKHNlbGYpOgoJCXNlbGYuaGVhZGVycyA9IHt9CgkJc2VsZi5oZWFkZXJzWyJIb3N0Il0gPSAiMmNoLmhrIgoJCXNlbGYuaGVhZGVycy51cGRhdGUoc2VsZi5hZ2VudCkKCQlzZWxmLmhlYWRlcnNbIkFjY2VwdCJdID0gImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjdGlwdCwgKi8qOyBxPTAuMDEiCgkJc2VsZi5oZWFkZXJzWyJBY2NlcHQtTGFuZ3VhZ2UiXSA9ICJydS1SVSxydTtxPTAuOCxlbi1VUztxPTAuNSxlbjtxPTAuMyIKCQlzZWxmLmhlYWRlcnNbIkFjY2VwdC1FbmNvZGluZyJdID0gImd6aXAsIGRlZmxhdGUsIGJyIgoJCXNlbGYuaGVhZGVyc1siUmVmZXJlciJdID0gc3RyKCJodHRwczovLzJjaC5oay8iICsgc2VsZi5ib2FyZCArICIvcmVzLyIgKyBzZWxmLnRocmVhZCArICIuaHRtbCIpCgkJc2VsZi5oZWFkZXJzWyJYLVJlcXVlc3RlZC1XaXRoIl0gPSAiWE1MSHR0cFJlcXVlc3QiCgkJc2VsZi5oZWFkZXJzWyJDb250ZW50LUxlbmd0aCJdID0gc3RyKDE1MDAwMDAwICsgcmFuZG9tLnJhbmRpbnQoMCwgMTAwKSkKCQlzZWxmLmhlYWRlcnNbIkNvb2tpZSJdID0gIiIKCQlzZWxmLmhlYWRlcnNbIkNvbm5lY3Rpb24iXSA9ICJrZWVwLWFsaXZlIgoKCWRlZiBwcmVwYXJlKHNlbGYsIFRJTUVPVVQpOgoJCXRyeToKCQkJc2VsZi5idWZmZXJbImNoYXB0Y2hhX2lkIl0sIHNlbGYuYnVmZmVyWyJjaGFwdGNoYV92YWx1ZSJdID0gQ2FwdGNoYShzZWxmLnByb3h5LCBzZWxmLmFnZW50LCBzZWxmLmJvYXJkLCBzZWxmLnRocmVhZCwgc2VsZi5zb2x2ZXIsIFRJTUVPVVQsIHNlbGYuY2FwdGNoYVR5cGUpLnNvbHZlKCkKCQkJaWYgc2VsZi5jYXB0Y2hhVHlwZSA9PSAiMmNoIjoKCQkJCXNlbGYucGFyYW1zLmFwcGVuZCgoIjJjaGFwdGNoYV9pZCIsIHNlbGYuYnVmZmVyWyJjaGFwdGNoYV9pZCJdKSkKCQkJCXNlbGYucGFyYW1zLmFwcGVuZCgoIjJjaGFwdGNoYV92YWx1ZSIsIHNlbGYuYnVmZmVyWyJjaGFwdGNoYV92YWx1ZSJdKSkKCQkJZWxzZToKCQkJCXNlbGYucGFyYW1zLmFwcGVuZCgoIjJjaGFwdGNoYV9pZCIsIHNlbGYuYnVmZmVyWyJjaGFwdGNoYV9pZCJdKSkKCQkJCXNlbGYucGFyYW1zLmFwcGVuZCgoImctcmVjYXB0Y2hhLXJlc3BvbnNlIiwgc2VsZi5idWZmZXJbImNoYXB0Y2hhX3ZhbHVlIl0pKQoJCQlwcmludChzZWxmLnByb3h5WyJodHRwIl0sICJzb2x2ZWQiKQoJCQlyZXR1cm4gVHJ1ZQoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCQkJI3ByaW50KGUpCgkJCXJldHVybiBGYWxzZQoKCWRlZiBzZXRfc3ViamVjdChzZWxmLCB0ZXh0KToKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJzdWJqZWN0IiwgKE5vbmUsIHRleHQpKSkKCglkZWYgc2V0X3RleHQoc2VsZiwgdGV4dCk6CgkJc2VsZi5wYXJhbXMuYXBwZW5kKCgiY29tbWVudCIsIChOb25lLCB0ZXh0KSkpCgkJCglkZWYgc2V0X3NhZ2Uoc2VsZik6CgkJc2VsZi5wYXJhbXMuYXBwZW5kKCgiZW1haWwiLCAoTm9uZSwgInNhZ2UiKSkpCgkJc2VsZi5wYXJhbXMuYXBwZW5kKCgic2FnZSIsIChOb25lLCAib24iKSkpCgoJZGVmIHNldF9pbWFnZShzZWxmLCBmaWxlX25hbWUsIHNoYWthbFBvd2VyPTAsIHNoYWthbENvbG9yPUZhbHNlLCBzaGFrYWxBZmZpbmU9RmFsc2UsIHRvUE5HPUZhbHNlKToKCQlpbWFnZSA9IHNlbGYuc2hha2FsKGZpbGVfbmFtZSwgc2hha2FsUG93ZXIsIHNoYWthbENvbG9yLCBzaGFrYWxBZmZpbmUsIHRvUE5HKQoJCWZpbGVfbmFtZV9kaXNwbGF5ZWQgPSBzdHIoJycuam9pbihzdHIocmFuZG9tLnJhbmRpbnQoMCwgOSkpIGZvciBfIGluIHJhbmdlKE5BTUVfU0laRS0xKSkgKyAiMCIpCgkJaWYgdG9QTkc6IGZpbGVfbmFtZV9kaXNwbGF5ZWQgKz0gIi5wbmciCgkJZWxzZTogZmlsZV9uYW1lX2Rpc3BsYXllZCArPSAiLmpwZyIKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJmb3JtaW1hZ2VzW10iLCAoZmlsZV9uYW1lX2Rpc3BsYXllZCwgaW1hZ2UsICJpbWFnZS9qcGVnIikpKQoKCWRl
ZiBzZXRfdmlkZW8oc2VsZiwgZmlsZV9uYW1lKToKCQlpZiBmaWxlX25hbWUuZmluZCgiLm1wNCIpICE9IC0xOiBleHQgPSAibXA0IgoJCWVsaWYgZmlsZV9uYW1lLmZpbmQoIi53ZWJtIikgIT0gLTE6IGV4dCA9ICJ3ZWJtIgoKCQl2aWRlbyA9IG9wZW4oZmlsZV9uYW1lLCAicmIiKQoJCXZpZGVvX2J5dGVzID0gdmlkZW8ucmVhZCgpCgkJdmlkZW8uY2xvc2UoKQoKCQlmaWxlX25hbWVfZGlzcGxheWVkID0gc3RyKCcnLmpvaW4oc3RyKHJhbmRvbS5yYW5kaW50KDAsIDkpKSBmb3IgXyBpbiByYW5nZShOQU1FX1NJWkUtMSkpICsgIjAiKQoJCWZpbGVfbmFtZV9kaXNwbGF5ZWQgKz0gc3RyKCIuIiArIGV4dCkKCQlzZWxmLnBhcmFtcy5hcHBlbmQoKCJmb3JtaW1hZ2VzW10iLCAoZmlsZV9uYW1lX2Rpc3BsYXllZCwgdmlkZW9fYnl0ZXMsIHN0cigidmlkZW8vIiArIGV4dCkpKSkKCglkZWYgc2V0X21lZGlhKHNlbGYsIG1lZGlhTmFtZSwgbWVkaWEsIHNoYWthbFBvd2VyPTAsIHNoYWthbENvbG9yPUZhbHNlLCBzaGFrYWxBZmZpbmU9RmFsc2UsIHRvUE5HPUZhbHNlKToKCQlmaWxlX25hbWVfZGlzcGxheWVkID0gc3RyKCcnLmpvaW4oc3RyKHJhbmRvbS5yYW5kaW50KDAsIDkpKSBmb3IgXyBpbiByYW5nZShOQU1FX1NJWkUtMSkpICsgIjAiKQoKCQlpZiBtZWRpYU5hbWUuZmluZCgiLmpwZyIpICE9IC0xIG9yIG1lZGlhTmFtZS5maW5kKCIucG5nIikgIT0gLTEgb3IgbWVkaWFOYW1lLmZpbmQoIi5naWYiKSAhPSAtMSBvciBtZWRpYU5hbWUuZmluZCgiLmJtcCIpICE9IC0xOgoJCQltZWRpYSA9IHNlbGYuc2hha2FsKGlvLkJ5dGVzSU8obWVkaWEpLCBzaGFrYWxQb3dlciwgc2hha2FsQ29sb3IsIHNoYWthbEFmZmluZSwgdG9QTkcpCgoJCQlpZiB0b1BORzoKCQkJCW1lZGlhVHlwZSA9ICJpbWFnZS9wbmciCgkJCQlmaWxlX25hbWVfZGlzcGxheWVkICs9ICIucG5nIgoJCQllbHNlOgoJCQkJbWVkaWFUeXBlID0gImltYWdlL2pwZWciCgkJCQlmaWxlX25hbWVfZGlzcGxheWVkICs9ICIuanBnIgoKCQllbGlmIG1lZGlhTmFtZS5maW5kKCIubXA0IikgIT0gLTE6CgkJCW1lZGlhVHlwZSA9ICJ2aWRlby9tcDQiCgkJCWZpbGVfbmFtZV9kaXNwbGF5ZWQgKz0gIi5tcDQiCgkJZWxpZiBtZWRpYU5hbWUuZmluZCgiLndlYm0iKSAhPSAtMToKCQkJbWVkaWFUeXBlID0gInZpZGVvL3dlYm0iCgkJCWZpbGVfbmFtZV9kaXNwbGF5ZWQgKz0gIi53ZWJtIgoJCWVsc2U6CgkJCW1lZGlhVHlwZSA9ICJpbWFnZSIKCQkJZmlsZV9uYW1lX2Rpc3BsYXllZCArPSAiLmpwZyIKCgkJc2VsZi5wYXJhbXMuYXBwZW5kKCgiZm9ybWltYWdlc1tdIiwgKGZpbGVfbmFtZV9kaXNwbGF5ZWQsIG1lZGlhLCBtZWRpYVR5cGUpKSkKCglkZWYgc2hha2FsKHNlbGYsIGltYWdlLCBwb3dlciwgY29sb3I9RmFsc2UsIGFmZmluZT1GYWxzZSwgdG9QTkc9RmFsc2UpOgoJCWltYWdlID0gUElMLkltYWdlLm9wZW4oaW1hZ2UpLmNvbnZlcnQoIlJHQkEiKQoJCXdpZHRoLCBoZWlnaHQgPSBpbWFnZS5zaXplCgkJZm9yIHggaW4gcmFuZ2UocG93ZXIpOiBpbWFnZS5wdXRwaXhlbCgocmFuZG9tLnJhbmRpbnQoMCwgd2lkdGgtMSksIHJhbmRvbS5yYW5kaW50KDAsIGhlaWdodC0xKSksIChyYW5kb20ucmFuZGludCgwLCAyNTUpLCByYW5kb20ucmFuZGludCgwLCAyNTUpLCByYW5kb20ucmFuZGludCgwLCAyNTUpKSkKCgkJaWYgY29sb3I6CgkJCXJlZCA9IHJhbmRvbS5yYW5kaW50KDAsIDI1NSkKCQkJZGlmID0gYWJzKHJlZCAtIDEyNykKCQkJZ3JlZW4gPSByYW5kb20ucmFuZGludCgwLCBkaWYpCgkJCWlmIHJhbmRvbS5yYW5kaW50KDAsIDEpOiBncmVlbiA9IDI1NSAtIGdyZWVuCgkJCWJsdWUgPSByYW5kb20ucmFuZGludChtYXgoMCwgMjU1LXJlZC1ncmVlbiksIG1pbigyNTUsIDUxMC1yZWQtZ3JlZW4pKQoJCQlpZiByYW5kb20ucmFuZGludCgwLCAxKTogcmVkLCBncmVlbiA9IGdyZWVuLCByZWQKCQkJaWYgcmFuZG9tLnJhbmRpbnQoMCwgMSk6IHJlZCwgYmx1ZSA9IGJsdWUsIHJlZAoJCQlpZiByYW5kb20ucmFuZGludCgwLCAxKTogYmx1ZSwgZ3JlZW4gPSBncmVlbiwgYmx1ZQoJCQlsYXllciA9IFBJTC5JbWFnZS5uZXcoIlJHQkEiLCBpbWFnZS5zaXplLCAocmVkLCBncmVlbiwgYmx1ZSwgNjUpKQoJCQlpbWFnZS5wYXN0ZShsYXllciwgKDAsIDApLCBsYXllcikKCQlpZiBhZmZpbmU6CgkJCXNoYWthbCA9ICgxICsgcmFuZG9tLnJhbmRpbnQoMCwgMTAwKS8xMDAwIC0gMC4wNSwgMCArIHJhbmRvbS5yYW5kaW50KDAsIDEwMCkvMTAwMCAtIDAuMDUsIDEgKyByYW5kb20ucmFuZGludCgwLCAxMDApLzEwMDAgLSAwLjA1LCAwICsgcmFuZG9tLnJhbmRpbnQoMCwgMTAwKS8xMDAwIC0gMC4wNSwgMSArIHJhbmRvbS5yYW5kaW50KDAsIDEwMCkvMTAwMCAtIDAuMDUsIDAgKyByYW5kb20ucmFuZGludCgwLCAxMDApLzEwMDAgLSAwLjA1KQoJCQlpbWFnZSA9IGltYWdlLnRyYW5zZm9ybShpbWFnZS5zaXplLCBQSUwuSW1hZ2UuQUZGSU5FLCBzaGFrYWwsIHJlc2FtcGxlPVBJTC5JbWFnZS5CSUNVQklDKQoKCQlpbWFnZSA9IGltYWdlLmNyb3AoKHJhbmRvbS5yYW5kaW50KDAsIHBvd2VyKSwgcmFuZG9tLnJhbmRpbnQoMCwgcG93ZXIpLCB3aWR0aC0xIC0gcmFuZG9tLnJhbmRp
bnQoMCwgcG93ZXIpLCBoZWlnaHQtMSAtIHJhbmRvbS5yYW5kaW50KDAsIHBvd2VyKSkpCgkJaWYgdG9QTkc6CgkJCWltYWdlX2J5dGVzID0gaW8uQnl0ZXNJTygpCgkJCWltYWdlLnNhdmUoaW1hZ2VfYnl0ZXMsICJQTkciLCBxdWFsaXR5PTIwICsgcmFuZG9tLnJhbmRpbnQoMTAsIDMwKSwgb3B0aW1pemU9Ym9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpLCBwcm9ncmVzc2l2ZT1ib29sKHJhbmRvbS5nZXRyYW5kYml0cygxKSkpCgkJZWxzZToKCQkJaW1hZ2UgPSBpbWFnZS5jb252ZXJ0KCJSR0IiKQoJCQlpbWFnZV9ieXRlcyA9IGlvLkJ5dGVzSU8oKQoJCQlpbWFnZS5zYXZlKGltYWdlX2J5dGVzLCAiSlBFRyIsIHF1YWxpdHk9NjAgKyByYW5kb20ucmFuZGludCgxMCwgMzApLCBvcHRpbWl6ZT1ib29sKHJhbmRvbS5nZXRyYW5kYml0cygxKSksIHByb2dyZXNzaXZlPWJvb2wocmFuZG9tLmdldHJhbmRiaXRzKDEpKSkKCQlpbWFnZS5jbG9zZSgpCgkJcmV0dXJuIGltYWdlX2J5dGVzLmdldHZhbHVlKCkKCglkZWYgc2VuZChzZWxmLCBUSU1FT1VULCBQQVVTRSk6CgkJcmVzcG9uc2UgPSB7fQoJCXRyeToKCQkJcHJpbnQoc2VsZi5wcm94eVsiaHR0cCJdLCAicG9zdGluZyIpCgkJCXdhaXRfdGltZSA9IHJhbmRvbS5yYW5kaW50KDYsIDE1KQoJCQl0aW1lLnNsZWVwKFBBVVNFKQoJCQlyZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vMmNoLmhrL21ha2FiYS9wb3N0aW5nLmZjZ2k/anNvbj0xIiwgZmlsZXM9c2VsZi5wYXJhbXMsIHByb3hpZXM9c2VsZi5wcm94eSwgaGVhZGVycz1zZWxmLmhlYWRlcnMsIHRpbWVvdXQ9VElNRU9VVCwgdmVyaWZ5PUZhbHNlKS5qc29uKCkKCQkJU3RhdHMuaW5jUG9zdHMoKQoJCQlTdGF0cy5wcmludFN0YXRzKGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KQoJCQlyZXR1cm4gcmVzcG9uc2VbJ1N0YXR1cyddID09ICdPSycsIHJlc3BvbnNlCgkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCQkjcHJpbnQoZSkKCQkJcmV0dXJuIEZhbHNlLCByZXNwb25zZQoKCiMgPT09PT09INCS0LDQudC/0LDQu9C60LAgPT09PT09CmNsYXNzIFdpcGVyOgoKCWRlZiBfX2luaXRfXyhzZWxmLCBzZXR1cCwgY2F0YWxvZywgdGhyZWFkcyk6CgkJcHJpbnQoIlxu0JfQkCDQkdCj0J3QlCDQmCDQodCQ0JPQoywg0JfQkCDQp9CV0KHQotCsINCYINCe0KLQktCQ0JPQoyEiKQoJCSMgcHJpbnQoIlBhdGNoZWQgYnkgQG93b2RlbHRhIC8gWC1DYXB0Y2hhIGJ5IGtvYmF0byAvIHBhdGNoZWQgYWdhaW4gYnkgQG93b2RlbHRhIikKCQlzZWxmLnByb3hpZXMgPSBbcHJveHlbOi0xXSBmb3IgcHJveHkgaW4gb3BlbigicHJveGllcyIsICJyIikucmVhZGxpbmVzKCldCgkJcmFuZG9tLnNodWZmbGUoc2VsZi5wcm94aWVzKQoJCVN0YXRzLnNldFByb3hpZXMobGVuKHNlbGYucHJveGllcykpCgkJc2VsZi5hZ2VudHMgPSBbYWdlbnRbOi0xXSBmb3IgYWdlbnQgaW4gb3BlbigidXNlcmFnZW50cyIpLnJlYWRsaW5lcygpXQoJCXNlbGYuYm9hcmQgPSBzZXR1cC5ib2FyZAoJCXNlbGYudGhyZWFkID0gc2V0dXAudGhyZWFkCgkJc2VsZi5zZXR1cCA9IHNldHVwCgkJc2VsZi5jYXRhbG9nID0gY2F0YWxvZwoJCXNlbGYudGhyZWFkcyA9IHRocmVhZHMKCgkJc2VsZi5zZXRfc29sdmVyKHNldHVwLnNvbHZlcikKCglkZWYgc2V0X3NvbHZlcihzZWxmLCBzb2x2ZXIpOgoJCWNhcHRjaGEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vMmNoLmhrL2FwaS9jYXB0Y2hhLzJjaGFwdGNoYS9pZD9ib2FyZD1iJnRocmVhZD0wIiwgaGVhZGVycz17IlVzZXItQWdlbnQiOiBzZWxmLmFnZW50c1swXX0sIHRpbWVvdXQ9c2VsZi5zZXR1cC5USU1FT1VULCB2ZXJpZnk9RmFsc2UpLmpzb24oKQoJCWNhcHRjaGFJRCA9IGNhcHRjaGFbImlkIl0KCQlpbWFnZSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly8yY2guaGsvYXBpL2NhcHRjaGEvMmNoYXB0Y2hhL2ltYWdlLyIgKyBjYXB0Y2hhSUQsIGhlYWRlcnM9eyJVc2VyLUFnZW50Ijogc2VsZi5hZ2VudHNbMF19LCB0aW1lb3V0PXNlbGYuc2V0dXAuVElNRU9VVCwgdmVyaWZ5PUZhbHNlKS5jb250ZW50CgkJZXJyb3IgPSBvcGVuKCJlcnJvci5naWYiLCJyYiIpCgoJCWlmIFRydWU6I2ltYWdlID09IGVycm9yLnJlYWQoKToKCQkJc2VsZi5jYXB0Y2hhVHlwZSA9ICJyZSIKCQkJaWYgc29sdmVyID09IDA6CgkJCQlzZWxmLnNvbHZlciA9IENhcHRjaGFTb2x2ZXJfWENhcHRjaGFfcmUoc2VsZi5zZXR1cC5rZXksIHNlbGYuc2V0dXAua2V5cmVxKQoJCQllbGlmIHNvbHZlciA9PSAxOgoJCQkJc2VsZi5zb2x2ZXIgPSBDYXB0Y2hhU29sdmVyX2NhcHRjaGFndXJ1X3JlKHNlbGYuc2V0dXAua2V5LCBzZWxmLnNldHVwLmtleXJlcSkKCQkJZWxpZiBzb2x2ZXIgPT0gMjoKCQkJCXNlbGYuc29sdmVyID0gQ2FwdGNoYVNvbHZlcl9hbnRpY2FwdGNoYV9yZShzZWxmLnNldHVwLmtleSwgc2VsZi5zZXR1cC5rZXlyZXEpCgkJZWxzZToKCQkJc2VsZi5jYXB0Y2hhVHlwZSA9ICIyY2giCgkJCWlmIHNvbHZlciA9PSAwOgoJCQkJc2VsZi5zb2x2ZXIgPSBDYXB0Y2hhU29sdmVyX1hDYXB0Y2hhXzJjaChzZWxmLnNldHVwLmtleSwgc2VsZi5zZXR1cC5rZXlyZXEpCgkJCWVsaWYgc29sdmVyID09IDE6CgkJCQlzZWxmLnNvbHZl
ciA9IENhcHRjaGFTb2x2ZXJfY2FwdGNoYWd1cnVfMmNoKHNlbGYuc2V0dXAua2V5LCBzZWxmLnNldHVwLmtleXJlcSkKCQkJZWxpZiBzb2x2ZXIgPT0gMjoKCQkJCXNlbGYuc29sdmVyID0gQ2FwdGNoYVNvbHZlcl9hbnRpY2FwdGNoYV8yY2goc2VsZi5zZXR1cC5rZXksIHNlbGYuc2V0dXAua2V5cmVxKQoKCWRlZiB0cmFwX3JlcGxhY2Uoc2VsZiwgdGV4dCk6CgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQkCIsICJBIikucmVwbGFjZSgi0LAiLCAiYSIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQlSIsICJFIikucmVwbGFjZSgi0LUiLCAiZSIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQniIsICJPIikucmVwbGFjZSgi0L4iLCAibyIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQoCIsICJQIikucmVwbGFjZSgi0YAiLCAicCIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQoSIsICJDIikucmVwbGFjZSgi0YEiLCAiYyIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQpSIsICJYIikucmVwbGFjZSgi0YUiLCAieCIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQkiIsICJCIikKCQlpZiBib29sKHJhbmRvbS5nZXRyYW5kYml0cygxKSk6CgkJCXRleHQgPSB0ZXh0LnJlcGxhY2UoItCcIiwgIk0iKQoJCWlmIGJvb2wocmFuZG9tLmdldHJhbmRiaXRzKDEpKToKCQkJdGV4dCA9IHRleHQucmVwbGFjZSgi0J0iLCAiSCIpCgkJaWYgYm9vbChyYW5kb20uZ2V0cmFuZGJpdHMoMSkpOgoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCLQoiIsICJUIikKCQlpZiBib29sKHJhbmRvbS5nZXRyYW5kYml0cygxKSk6CgkJCXRleHQgPSB0ZXh0LnJlcGxhY2UoItGDIiwgInkiKQoJCXJldHVybiB0ZXh0CgoJZGVmIHNlbmRfcG9zdChzZWxmKToKCQlpZiAobGVuKHNlbGYucHJveGllcykgPT0gMCk6IHJldHVybiBGYWxzZQoJCXByb3h5ID0gc2VsZi5wcm94aWVzLnBvcCgwKQoJCWFnZW50ID0gcmFuZG9tLmNob2ljZShzZWxmLmFnZW50cykKCQlyZXNwb25zZSA9IHsiRXJyb3IiOiAicHJveHkifQoKCQljb3VudGVyID0gMAoKCQl0cnk6CgkJCSN3aWxsIHF1aXQgdGhlIHRocmVhZCBpZiBleGNlcHRpb24gaXMgaGVyZS4gRml4ZWQgbm93LgoJCQl3aGlsZSBjb3VudGVyIDwgc2VsZi5zZXR1cC5wcm94eVJlcGVhdHNDb3VudDoKCQkJCWlmIHNlbGYuc2V0dXAuc2hyYXBuZWxDaGFyZ2UgPT0gMDoKCQkJCQl0aHJlYWROdW0gPSAwCgkJCQkJaWYgKHNlbGYuc2V0dXAuY2hhb3MgPT0gIi0xIik6CgkJCQkJCXRocmVhZCA9IHNlbGYudGhyZWFkc1swXQoJCQkJCWVsc2U6CgkJCQkJCXRocmVhZCA9IHNlbGYuc2V0dXAudGFyZ2V0VGhyZWFkCgkJCQllbHNlOgoJCQkJCXRocmVhZE51bSA9IHJhbmRvbS5yYW5kaW50KDAsIHNlbGYuc2V0dXAuc2hyYXBuZWxDaGFyZ2UtMSkKCQkJCQlpZiAoc2VsZi5zZXR1cC5jaGFvcyA9PSAiLTEiKToKCQkJCQkJdGhyZWFkID0gc2VsZi50aHJlYWRzW3RocmVhZE51bV0KCQkJCQllbGlmIChzZWxmLnNldHVwLmNoYW9zID09ICIwIik6CgkJCQkJCXRocmVhZCA9IHNlbGYudGhyZWFkc1tyYW5kb20ucmFuZGludCgwLCBsZW4oc2VsZi50aHJlYWRzKS0xKV0KCQkJCQllbHNlOgoJCQkJCQl0aHJlYWQgPSBzZWxmLnNldHVwLnRhcmdldFRocmVhZAoKCQkJCXBvc3QgPSBOZXdQb3N0KHByb3h5LCBhZ2VudCwgc2VsZi5ib2FyZCwgdGhyZWFkLklELCBzZWxmLnNvbHZlciwgc2VsZi5jYXB0Y2hhVHlwZSkKCQkJCWlmIChwb3N0LnByZXBhcmUoc2VsZi5zZXR1cC5USU1FT1VUKSk6CgkJCQkJY2hhcm51bSA9IHJhbmRvbS5yYW5kaW50KDEsIDEwMCkKCQkJCQlpZiBzZWxmLnRocmVhZCAhPSAiMCI6CgkJCQkJCWJsYWNrX2FudXMgPSByYW5kb20ucmFuZGludCgxLCBsZW4odGhyZWFkLnBvc3RzKS0xKSAgIyDQvdC+0LzQtdGAINC/0L7RgdGC0LAg0LTQu9GPINGC0YDQuNCz0LPQtdGA0LAKCQkJCQkJd2hpdGVfYW51cyA9IHJhbmRvbS5yYW5kaW50KDAsIGxlbihzZWxmLnRocmVhZHNbdGhyZWFkTnVtXS5wb3N0cyktMSkgICMg0L3QvtC80LXRgCDQv9C+0YHRgtCwINC00LvRjyDQtNGD0LHQu9C40YDQvtCy0LDQvdC40Y8KCgkJCQkJIyA9PT0g0LHQtdGA0ZHQvCDRgdC90LDRh9Cw0LvQsCDRgtGA0LjQs9Cz0LXRgCA9PT0KCQkJCQlpZiBzZWxmLnNldHVwLnRyaWdnZXJGb3JtID09IDE6CgkJCQkJCXRyaWdnZXIgPSAiPj4iICsgdGhyZWFkLmxhc3RJRCArICdcbicKCQkJCQllbGlmIHNlbGYuc2V0dXAudHJpZ2dlckZvcm0gPT0gMjoKCQkJCQkJdHJpZ2dlciA9ICI+PiIgKyB0aHJlYWQucG9zdHNbYmxhY2tfYW51c10uSUQgKyAnXG4nCgkJCQkJZWxpZiBzZWxmLnNldHVwLnRyaWdnZXJGb3JtID09IDM6CgkJCQkJCXRyaWdnZXIgPSB0aHJlYWQubG9hZiArICdcbicKCQkJCQllbGlmIHNlbGYuc2V0dXAudHJp
Z2dlckZvcm0gPT0gNDoKCQkJCQkJdHJpZ2dlciA9ICI+PiIgKyB0aHJlYWQucG9zdHNbMF0uSUQgKyAnXG4nCgkJCQkJZWxpZiBzZWxmLnNldHVwLnRyaWdnZXJGb3JtID09IDA6CgkJCQkJCXRyaWdnZXIgPSAiIgoKCQkJCQkjID09PSDQv9C+0YLQvtC8INGC0LXQutGB0YIg0L/QvtGB0YLQsCA9PT0KCQkJCQlpZiBzZWxmLnNldHVwLm1vZGUgPT0gMToKCQkJCQkJcG9zdC5zZXRfdGV4dCh0cmlnZ2VyICsgc2VsZi5zZXR1cC5wYXN0ZXNbcmFuZG9tLnJhbmRpbnQoMCwgOSldKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDI6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlcikKCQkJCQllbGlmIHNlbGYuc2V0dXAubW9kZSA9PSAwOgoJCQkJCQlwb3N0LnNldF90ZXh0KHRyaWdnZXIgKyAnJy5qb2luKHJhbmRvbS5jaG9pY2UoVEVYVF9DSEFSUykgZm9yIF8gaW4gcmFuZ2UoY2hhcm51bSkpKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDM6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlciArICgiPiAiICsgdGhyZWFkLnBvc3RzW2JsYWNrX2FudXNdLmNvbW1lbnQpLnJlcGxhY2UoIlxuIiwgIlxuPiAiKS5yZXBsYWNlKCJcbj4gXG4iLCAiXG5cbiIpKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDQ6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlciArIHNlbGYudHJhcF9yZXBsYWNlKHNlbGYuc2V0dXAucGFzdGVzW3JhbmRvbS5yYW5kaW50KDAsIGxlbihzZWxmLnNldHVwLnBhc3RlcyktMSldKSkKCQkJCQllbGlmIHNlbGYuc2V0dXAubW9kZSA9PSA1OgoJCQkJCQlwb3N0LnNldF90ZXh0KHRyaWdnZXIgKyAiaHR0cHM6Ly8yY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4
N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4
N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4
N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoyY2guaGsvYi9yZXMvTVp4N1cwNUoiKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDY6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlciArIHNlbGYudHJhcF9yZXBsYWNlKHNlbGYuc2V0dXAuYmlnUGFzdGUpKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDc6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlciArIHNlbGYudHJhcF9yZXBsYWNlKHNlbGYudGhyZWFkc1t0aHJlYWROdW1dLnBvc3RzW3doaXRlX2FudXNdLmNvbW1lbnQpKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5tb2RlID09IDg6CgkJCQkJCXBvc3Quc2V0X3RleHQodHJpZ2dlciArIHNlbGYuc2V0dXAucGFzdGVzW3JhbmRvbS5yYW5kaW50KDAsIGxlbihzZWxmLnNldHVwLnBhc3RlcyktMSldLnJlcGxhY2UoIkJBTk5VTUJFUiIsIHN0cihyYW5kb20ucmFuZGludChzZWxmLnNldHVwLm1pbkJhbiwgc2VsZi5zZXR1cC5tYXhCYW4pKSkpCgoJCQkJCSMgPT09INC00L4gNCDQv9GA0LjQutGA0LXQv9C70LXQvdC40LkgPT09CgkJCQkJaWYgc2VsZi5zZXR1cC5tZWRpYUtpbmQgPiAwOgoJCQkJCQl0cnk6CgkJCQkJCQlpZiBzZWxmLnNldHVwLm1lZGlhS2luZCA9PSAzOgoJCQkJCQkJCWlmIHNlbGYuc2V0dXAuc2hyYXBuZWxDaGFyZ2UgIT0gMDoKCQkJCQkJCQkJbWVkaWFzQ291bnQgPSBtaW4obGVuKHNlbGYudGhyZWFkc1t0aHJlYWROdW1dLnBvc3RzW3doaXRlX2FudXNdLm1lZGlhcyksIDQpCgkJCQkJCQkJCWZvciBtZWRpYSBpbiBzZWxmLnRocmVhZHNbdGhyZWFkTnVtXS5wb3N0c1t3aGl0ZV9hbnVzXS5tZWRpYXM6CgkJCQkJCQkJCQlwcmludCgi0KHQ
utCw0YfQuNCy0LDRjiIsIG1lZGlhLm5hbWUsICIoIitzdHIod2hpdGVfYW51cysxKSsiINC/0L7RgdGCICIrc2VsZi50aHJlYWRzW3RocmVhZE51bV0uSUQrIiDRgtGA0LXQtNCwKSIpCgkJCQkJCQkJCQltZWRpYS5kb3dubG9hZCgpCgkJCQkJCQkJZWxzZToKCQkJCQkJCQkJbWVkaWFzQ291bnQgPSBtaW4obGVuKHNlbGYudGhyZWFkc1t0aHJlYWROdW1dLnBvc3RzW3doaXRlX2FudXNdLm1lZGlhcyksIDQpCgkJCQkJCQllbHNlOgoJCQkJCQkJCW1lZGlhc0NvdW50ID0gc2VsZi5zZXR1cC5tZWRpYXNDb3VudAoKCQkJCQkJCWZvciBtZWRpYU51bSBpbiByYW5nZShtZWRpYXNDb3VudCk6CgkJCQkJCQkJaWYgc2VsZi5zZXR1cC5tZWRpYUtpbmQgIT0gMzoKCQkJCQkJCQkJYmx1ZV9hbnVzID0gcmFuZG9tLnJhbmRpbnQoMCwgbGVuKHNlbGYuc2V0dXAubWVkaWFQYXRocyktMSkgICMg0L3QvtC80LXRgCDQv9C40LrRh9C4INC40LvQuCDQstC40LTQtdC+INGBINC00LjRgdC60LAKCQkJCQkJCQlpZiBzZWxmLnNldHVwLm1lZGlhS2luZCA9PSAxOgoJCQkJCQkJCQlwb3N0LnNldF9pbWFnZShzZWxmLnNldHVwLm1lZGlhUGF0aHNbYmx1ZV9hbnVzXSwgc2VsZi5zZXR1cC5zaGFrYWxQb3dlciwgc2VsZi5zZXR1cC5zaGFrYWxDb2xvciwgc2VsZi5zZXR1cC5zaGFrYWxBZmZpbmUsIHNlbGYuc2V0dXAudG9QTkcpCgkJCQkJCQkJZWxpZiBzZWxmLnNldHVwLm1lZGlhS2luZCA9PSAyOgoJCQkJCQkJCQlwb3N0LnNldF92aWRlbyhzZWxmLnNldHVwLm1lZGlhUGF0aHNbYmx1ZV9hbnVzXSkKCQkJCQkJCQllbGlmIHNlbGYuc2V0dXAubWVkaWFLaW5kID09IDM6CgkJCQkJCQkJCXBvc3Quc2V0X21lZGlhKHNlbGYudGhyZWFkc1t0aHJlYWROdW1dLnBvc3RzW3doaXRlX2FudXNdLm1lZGlhc1ttZWRpYU51bV0ubmFtZSwgc2VsZi50aHJlYWRzW3RocmVhZE51bV0ucG9zdHNbd2hpdGVfYW51c10ubWVkaWFzW21lZGlhTnVtXS5maWxlLCBzZWxmLnNldHVwLnNoYWthbFBvd2VyLCBzZWxmLnNldHVwLnNoYWthbENvbG9yLCBzZWxmLnNldHVwLnNoYWthbEFmZmluZSwgc2VsZi5zZXR1cC50b1BORykKCQkJCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCQkJCQkJcHJpbnQoZSkKCQkJCQkJCXByaW50KCLQndC1INC80L7Qs9GDINGB0LrQsNGH0LDRgtGMIC8g0L/RgNC40LrRgNC10L/QuNGC0Ywg0YTQsNC50LsuIikKCgkJCQkJIyA9PT0g0Lgg0YHQsNC20YMg0YLRg9C00YsgPT09CgkJCQkJaWYgc2VsZi5zZXR1cC5zYWdlTW9kZSA9PSAyOgoJCQkJCQlpZiBzZWxmLnRocmVhZHNbdGhyZWFkTnVtXS5wb3N0c1t3aGl0ZV9hbnVzXS5zYWdlID09IFRydWU6CgkJCQkJCQlwb3N0LnNldF9zYWdlKCkKCQkJCQkJZWxzZToKCQkJCQkJCXBvc3QucGFyYW1zLmFwcGVuZCgoImVtYWlsIiwgKE5vbmUsICIiKSkpCgkJCQkJZWxpZiBzZWxmLnNldHVwLnNhZ2VNb2RlID09IDE6CgkJCQkJCXBvc3Quc2V0X3NhZ2UoKQoJCQkJCWVsaWYgc2VsZi5zZXR1cC5zYWdlTW9kZSA9PSAwOgoJCQkJCQlwb3N0LnBhcmFtcy5hcHBlbmQoKCJlbWFpbCIsIChOb25lLCAiIikpKQoKCQkJCQlzdWNjZXNzLCByZXNwb25zZSA9IHBvc3Quc2VuZChzZWxmLnNldHVwLlRJTUVPVVQsIHNlbGYuc2V0dXAuUEFVU0UpCgkJCQkJaWYgc3VjY2VzczoKCQkJCQkJU3RhdHMuaW5jUG9zdHMoKQoJCQkJCQlwb3N0X2lkID0gMAoJCQkJCQl0cnk6CgkJCQkJCQlwb3N0X2lkID0gcmVzcG9uc2VbIlRhcmdldCJdCgkJCQkJCWV4Y2VwdDoKCQkJCQkJCXBvc3RfaWQgPSByZXNwb25zZVsiTnVtIl0KCQkJCQkJaWYgc2VsZi5zZXR1cC5zaHJhcG5lbENoYXJnZSA9PSAwOgoJCQkJCQkJcHJpbnQocHJveHkrIiAtIHN1Y2Nlc3MuIFBvc3QgaWQ6ICIrc3RyKHBvc3RfaWQpKQoJCQkJCQllbHNlOgoJCQkJCQkJcHJpbnQocHJveHkrIiAtIHN1Y2Nlc3MuIFBvc3QgaWQ6ICIrc3RyKHBvc3RfaWQpKyIgKCIrdGhyZWFkLklEKyIgdGhyZWFkKSIpCgkJCQkJCWlmIHNlbGYuc2V0dXAudGhyZWFkICE9ICIwIjoKCQkJCQkJCXNlbGYudGhyZWFkc1t0aHJlYWROdW1dLmxhc3RJRCA9IHN0cihwb3N0X2lkKQoKCQkJCQkJcHJpbnQoc3RyKHNlbGYuc2V0dXAucHJveHlSZXBlYXRzQ291bnQtY291bnRlcikrIiBMT09QUyBMRUZUIikKCQkJCQkJY291bnRlciArPSAxCgkJCQkJZWxzZToKCQkJCQkJcHJpbnQocHJveHksICJwb3N0aW5nIGZhaWxlZCAtIiwgcmVzcG9uc2UpCgoJCQkJCQl0cnk6CgkJCQkJCQlpZiByZXNwb25zZVsiRXJyb3IiXSA9PSAtNjoKCQkJCQkJCQlwcmludCgi0JfQsNCx0LDQvdC40LvQuCwg0YHRg9C60LguLi4gIitwcm94eSsiINCyINC/0LvQvtGF0L7QuSDQu9C40YHRgiIpCgkJCQkJCQkJYmFkcHJveGllcy5hcHBlbmQocHJveHkpCgkJCQkJCQkJaWYgbGVuKHNlbGYucHJveGllcykgPT0gMDoKCQkJCQkJCQkJcHJpbnQoItCX0LDQutC+0L3Rh9C40LvQuNGB0Ywg0L/RgNC+0LrRgdC40YfQutC4ISIpCgkJCQkJCQkJCWNvdW50ZXIgPSBzZWxmLnNldHVwLnByb3h5UmVwZWF0c0NvdW50CgkJCQkJCQkJZWxzZToKCQkJCQkJCQkJcHJveHkgPSBzZWxmLnByb3hpZXMucG9wKDApCgkJCQkJCQkJCWNvdW50ZXIgPSAwCgkJCQkJCQllbGlmIHJlc3BvbnNlWyJFcnJvciJdID09IC00OgoJ
CQkJCQkJCXByaW50KCLQl9Cw0L3QvtGB0LjQvCAiK3Byb3h5KyIg0LIgZm9yYmlkZGVuLmNzdiIpCgkJCQkJCQkJYmFkcHJveGllcy5hcHBlbmQocHJveHkpCgkJCQkJCQkJZm9yYmlkZGVucHJveHkuYXBwZW5kKHByb3h5KQoJCQkJCQkJCWlmIGxlbihzZWxmLnByb3hpZXMpID09IDA6CgkJCQkJCQkJCXByaW50KCLQl9Cw0LrQvtC90YfQuNC70LjRgdGMINC/0YDQvtC60YHQuNGH0LrQuCEiKQoJCQkJCQkJCQljb3VudGVyID0gc2VsZi5zZXR1cC5wcm94eVJlcGVhdHNDb3VudAoJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCXByb3h5ID0gc2VsZi5wcm94aWVzLnBvcCgwKQoJCQkJCQkJCQljb3VudGVyID0gMAoJCQkJCQkJZWxpZiByZXNwb25zZVsiRXJyb3IiXSA9PSAtNzoKCQkJCQkJCQlpZiBzZWxmLnNldHVwLnNocmFwbmVsQ2hhcmdlID09IDA6CgkJCQkJCQkJCXByaW50KCLQnNC+0YfQsCDQstGL0YfQuNGJ0LDQtdGCINGC0YDQtdC0LiDQmtCe0J3Qp9CQ0K4uIikKCQkJCQkJCQkJc2FmZV9xdWl0KGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KQoJCQkJCQkJCWVsc2U6CgkJCQkJCQkJCXByaW50KCLQotGA0LXQtCAiK3NlbGYudGhyZWFkc1t0aHJlYWROdW1dLklEKyIg0LfQsNC60YDRi9C70YHRjy4iKQoJCQkJCQkJCQlkZWwgc2VsZi50aHJlYWRzW3RocmVhZE51bV0KCQkJCQkJCQkJaWYgbGVuKHNlbGYudGhyZWFkcykgPT0gMDoKCQkJCQkJCQkJCXByaW50KCLQktGB0LUg0YLRgNC10LTRiyDQt9Cw0LrRgNGL0YLRiy4g0KbQtSDQv9C10YDQtdC80L7Qs9CwLiIpCgkJCQkJCQkJCQlzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpCgkJCQkJCQllbGlmIG5vdCByZXNwb25zZToKCQkJCQkJCQlwcmludCgi0J7RiNC40LHQutCwINGB0LXRgtC4LCDQv9GA0L7QsdGD0LXQvCDQtdGJ0ZEg0YDQsNC3Li4uIikKCgkJCQkJCWV4Y2VwdCBFeGNlcHRpb246CgkJCQkJCQlpZiBsZW4ocmVzcG9uc2UpID4gMDoKCQkJCQkJCQlwcmludCgi0KLQsNC50LzQsNGD0YIuLi4gIitwcm94eSsiINCyINC/0LvQvtGF0L7QuSDQu9C40YHRgiIpCgkJCQkJCQkJYmFkcHJveGllcy5hcHBlbmQocHJveHkpCgkJCQkJCQkJaWYgbGVuKHNlbGYucHJveGllcykgPT0gMDoKCQkJCQkJCQkJcHJpbnQoItCX0LDQutC+0L3Rh9C40LvQuNGB0Ywg0L/RgNC+0LrRgdC40YfQutC4ISIpCgkJCQkJCQkJCWNvdW50ZXIgPSBzZWxmLnNldHVwLnByb3h5UmVwZWF0c0NvdW50CgkJCQkJCQkJZWxzZToKCQkJCQkJCQkJcHJveHkgPSBzZWxmLnByb3hpZXMucG9wKDApCgkJCQkJCQkJCWNvdW50ZXIgPSAwCgkJCWlmIG5vdCBwcm94eSBpbiBiYWRwcm94aWVzOgoJCQkJc2VsZi5wcm94aWVzLnB1c2gocHJveHkpCgoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToKCQkJcHJpbnQoZSkKIwkJCWJhZHByb3hpZXMuYXBwZW5kKHByb3h5KQoKCQlyZXR1cm4gVHJ1ZQoKCWRlZiB3aXBlKHNlbGYsIHRocmVhZF9jb3VudCk6CgkJU3RhdHMuc2V0bnVtT2ZUaHJlYWRzKHRocmVhZF9jb3VudCkKCgkJY2xhc3MgV2lwZXJUaHJlYWQodGhyZWFkaW5nLlRocmVhZCk6CgoJCQlkZWYgX19pbml0X18oc2VsZiwgd2lwZXIpOgoJCQkJdGhyZWFkaW5nLlRocmVhZC5fX2luaXRfXyhzZWxmKQoJCQkJc2VsZi53aXBlciA9IHdpcGVyCgoJCQlkZWYgcnVuKHNlbGYpOgoJCQkJc2VsZi53aXBlci5zZW5kX3Bvc3QoKQoKCQljbGFzcyBJbnB1dFRocmVhZCh0aHJlYWRpbmcuVGhyZWFkKToKCgkJCWRlZiBfX2luaXRfXyhzZWxmKToKCQkJCXRocmVhZGluZy5UaHJlYWQuX19pbml0X18oc2VsZikKCgkJCWRlZiBydW4oc2VsZik6CgkJCQlTdGF0cy5wcmludFN0YXRzKGJhZHByb3hpZXMsIGZvcmJpZGRlbnByb3h5KQoJCQkJZXRlcm5hbF9pbnB1dChiYWRwcm94aWVzLCBmb3JiaWRkZW5wcm94eSkKCgkJdGhyZWFkcyA9IFtdCgkJaW50aHIgPSBJbnB1dFRocmVhZCgpCgkJaW50aHIuc3RhcnQoKQoJCWZvciBpIGluIHJhbmdlKHRocmVhZF9jb3VudCk6CgkJCXRocmVhZHMuYXBwZW5kKFdpcGVyVGhyZWFkKHNlbGYpKQoJCQl0aHJlYWRzWy0xXS5zdGFydCgpCgoJCWZvciBpIGluIHJhbmdlKGxlbih0aHJlYWRzKSk6CgkJCXRocmVhZHNbaV0uam9pbigpCgp0cnk6CglzaG93X2xvZ28oKQoKCXNldHVwID0gU2V0dXAoc3lzLmFyZ3YpCglXaXBlck9iaiA9IFdpcGVyKHNldHVwLCBzZXR1cC5jYXRhbG9nLCBzZXR1cC50aHJlYWRzKQoJc2lnbmFsLnNpZ25hbChzaWduYWwuU0lHSU5ULCBzYWZlX3F1aXQpCglXaXBlck9iai53aXBlKHNldHVwLnBvdG9ja3NDb3VudCkKCglzYWZlX3F1aXQoYmFkcHJveGllcywgZm9yYmlkZGVucHJveHkpCgpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CglwcmludChlKQoJcHJpbnQoImFyZWxpdmUgb2Jvc3JhbHN5YSIpCglpbnB1dCgpCgo=
